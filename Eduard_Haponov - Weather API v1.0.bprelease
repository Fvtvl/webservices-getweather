<?xml version="1.0" encoding="utf-8"?>
<bpr:release xmlns:bpr="http://www.blueprism.co.uk/product/release">
    <bpr:name>Eduard_Haponov - Weather API v1.0</bpr:name>
    <bpr:release-notes />
    <bpr:created>2024-05-03 13:30:20Z</bpr:created>
    <bpr:package-id>23</bpr:package-id>
    <bpr:package-name>Eduard_Haponov - Weather API</bpr:package-name>
    <bpr:user-created-by>admin</bpr:user-created-by>
    <bpr:contents count="10">
        <process id="de828f2a-a065-4c5d-a613-4b995d2ad705" name="Eduard_Haponov - Weather API" published="true" xmlns="http://www.blueprism.co.uk/product/process"><process name="Eduard_Haponov - Weather API" version="1.0" bpversion="7.2.1.7446" narrative="" byrefcollection="true" processrunningmessage="" disableversioning="false"><view><camerax>51</camerax><cameray>90</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="ed39eccf-5062-43d2-8f56-1a09243be45b" type="Normal" published="False"><name>02 - From JSON to Collection</name><view><camerax>0</camerax><cameray>147</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="c39900d6-14c3-44e8-a3ac-6a18a4dc13f4" type="Normal" published="False"><name>Mark Item As Exception</name><view><camerax>289</camerax><cameray>570</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="5181367c-e4f8-4a5f-ad0b-9c1dedb44de9" type="Normal" published="False"><name>Populate City </name><view><camerax>150</camerax><cameray>123</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="1570a751-b626-4fe5-bae6-4a7e9fde61f3" type="Normal" published="False"><name>Mark Item As Completed</name><view><camerax>0</camerax><cameray>30</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="de6b91e2-efec-4684-947d-8afe365997c7" type="Normal" published="False"><name>01 - Get JSON </name><view><camerax>0</camerax><cameray>105</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="525ccf90-1c11-4163-ab93-de13ae2d5e24" type="Normal" published="False"><name>03 - Write to Excel</name><view><camerax>19</camerax><cameray>36</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="0484bd28-d4c0-46e0-9607-3a86818aecf6" type="Normal" published="False"><name>Write to Log File</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="deb1d248-85cc-4044-aa70-498cc7573461" type="Normal" published="False"><name>Reset Global Data</name><view><camerax>0</camerax><cameray>42</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="d55fea1f-f3dc-407e-beee-a18d1a4b9604" name="Start" type="Start"><display x="15" y="-105" /><onsuccess>1e9c0910-a398-4b19-bde3-bd9641245ab0</onsuccess></stage><stage stageid="c6285242-3d7a-440e-83ac-4c099a6720e9" name="Stage1" type="ProcessInfo"><display x="-195" y="-105" w="180" h="90" /></stage><stage stageid="d595cf21-6dfa-4725-9943-4fcba790b36f" name="03 - Write to Excel" type="SubSheetInfo"><subsheetid>525ccf90-1c11-4163-ab93-de13ae2d5e24</subsheetid><display x="-195" y="-255" w="150" h="90" /></stage><stage stageid="5cb7c70f-b58f-4d06-858f-ab815478f004" name="Start" type="Start"><subsheetid>525ccf90-1c11-4163-ab93-de13ae2d5e24</subsheetid><display x="15" y="-285" /><inputs><input type="collection" name="Result" stage="Result" /><input type="text" name="File Name" stage="File Name" /></inputs><onsuccess>5a35ccf6-f4bd-48ce-b643-4e291db94909</onsuccess></stage><stage stageid="9572d395-ac8c-4b75-8e67-a254095b0448" name="End" type="End"><subsheetid>525ccf90-1c11-4163-ab93-de13ae2d5e24</subsheetid><display x="15" y="435" /></stage><stage stageid="1c6c4825-cae8-4d36-8524-1ae6e736efec" name="Write Collection" type="Action"><subsheetid>525ccf90-1c11-4163-ab93-de13ae2d5e24</subsheetid><display x="15" y="255" /><inputs><input type="number" name="handle" friendlyname="handle" narrative="The integer handle identifying the instance on which the specified collection should be written. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Workbook Name" friendlyname="Workbook Name" narrative="The name of the workbook within which the data should be written. The default empty value indicates the current workbook within the specified instance." expr="[Workbook Name]" /><input type="text" name="Worksheet Name" friendlyname="Worksheet Name" narrative="The name of the worksheet on which the given data should be written. The default empty value indicates the current sheet within the specified workbook." expr="" /><input type="collection" name="Collection" friendlyname="Collection" narrative="The collection containing the data which should be written to the worksheet." expr="[Result]" /><input type="text" name="Cell Reference" friendlyname="Cell Reference" narrative="The reference at which the collection should be written." expr="&quot;A1&quot;" /><input type="flag" name="Include Column Names" friendlyname="Include Column Names" narrative="True to indicate that the column names from the collection should be written out as the first row; False to ignore the column names and just write out the data." expr="True" /></inputs><onsuccess>a63f54fb-fc54-45fb-b8e0-afc40c4af6b4</onsuccess><resource object="MS Excel VBO - Extended" action="Write Collection" /></stage><stage stageid="1846ddcf-6e73-439b-91e0-4b3330748ef4" name="Create Instance" type="Action"><subsheetid>525ccf90-1c11-4163-ab93-de13ae2d5e24</subsheetid><display x="15" y="75" /><inputs><input type="flag" name="Enable Events" friendlyname="Enable Events" narrative="Flag to indicate that events should be enabled / disabled on the attached instance - defaulted to True" expr="" /></inputs><outputs><output type="number" name="handle" friendlyname="handle" narrative="An integer which can be used to identify the created instance in subsequent actions" stage="handle" /></outputs><onsuccess>c91ebf4c-6f4e-41e6-9def-73664e9ea758</onsuccess><resource object="MS Excel VBO - Extended" action="Create Instance" /></stage><stage stageid="a9408015-d88c-4534-9440-6e92d5ea8c13" name="handle" type="Data"><subsheetid>525ccf90-1c11-4163-ab93-de13ae2d5e24</subsheetid><display x="-195" y="-15" w="120" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0a21120b-5a61-47cb-9e82-fa6a0c2d51ad" name="Save Current Workbook As" type="Action"><subsheetid>525ccf90-1c11-4163-ab93-de13ae2d5e24</subsheetid><display x="240" y="135" /><inputs><input type="number" name="handle" friendlyname="handle" narrative="The integer handle identifying the instance for which the current workbook which should be saved. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="File name" friendlyname="File name" narrative="The full path and file name to which the current workbook should be saved." expr="[File Path]" /></inputs><outputs><output type="text" name="New Workbook Name" friendlyname="New Workbook Name" narrative="The new workbook name which Excel will use to identify the workbook." stage="Workbook Name" /></outputs><onsuccess>1437acfd-1433-49fe-b3ac-152c0f37df16</onsuccess><resource object="MS Excel VBO - Extended" action="Save Current Workbook As" /></stage><stage stageid="17c40152-6e2b-4ca6-91d0-00c4d03cfb13" name="Close Instance" type="Action"><subsheetid>525ccf90-1c11-4163-ab93-de13ae2d5e24</subsheetid><display x="15" y="375" /><inputs><input type="number" name="handle" friendlyname="handle" narrative="The integer handle identifying the instance to be closed. Zero indicates the currently active instance." expr="[handle]" /><input type="flag" name="Save Changes" friendlyname="Save Changes" narrative="True to save the changes to the open workbooks on the instance, False to discard any changes. Default is False." expr="True" /></inputs><onsuccess>9572d395-ac8c-4b75-8e67-a254095b0448</onsuccess><resource object="MS Excel VBO - Extended" action="Close Instance" /></stage><stage stageid="a63f54fb-fc54-45fb-b8e0-afc40c4af6b4" name="Close Workbook" type="Action"><subsheetid>525ccf90-1c11-4163-ab93-de13ae2d5e24</subsheetid><display x="15" y="315" /><inputs><input type="number" name="handle" friendlyname="handle" narrative="The integer handle identifying the instance on which the workbook which should be closed resides. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Workbook Name" friendlyname="Workbook Name" narrative="The name of the workbook which should be closed." expr="[Workbook Name]" /><input type="flag" name="Save Data" friendlyname="Save Data" narrative="True to save the data before closing the workbook; The default of False will discard any changes before closing the workbook." expr="True" /></inputs><onsuccess>17c40152-6e2b-4ca6-91d0-00c4d03cfb13</onsuccess><resource object="MS Excel VBO - Extended" action="Close Workbook" /></stage><stage stageid="95a7a4ad-558b-460b-a97e-048d62660687" name="Create Worksheet" type="Action"><subsheetid>525ccf90-1c11-4163-ab93-de13ae2d5e24</subsheetid><display x="15" y="195" /><inputs><input type="number" name="handle" friendlyname="handle" narrative="The integer handle identifying the instance on which the worksheet should be created. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Workbook Name" friendlyname="Workbook Name" narrative="The name of the workbook in which the sheet should be created - The default empty value indicates the currently active workbook on the specified instance." expr="[Workbook Name]" /><input type="text" name="Worksheet Name" friendlyname="Worksheet Name" narrative="The name of the sheet which should be activated. The default empty text value indicates that the currently active sheet should be, er, activated, making this a no-op." expr="" /></inputs><onsuccess>1c6c4825-cae8-4d36-8524-1ae6e736efec</onsuccess><resource object="MS Excel VBO - Extended" action="Create Worksheet" /></stage><stage stageid="a971c10c-f55a-42c8-8d44-e23dba1138de" name="Workbook Name" type="Data"><subsheetid>525ccf90-1c11-4163-ab93-de13ae2d5e24</subsheetid><display x="-195" y="15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="81f28ac0-a5f9-4555-b437-83b0a3265a72" name="Kill Excel" type="Action"><subsheetid>525ccf90-1c11-4163-ab93-de13ae2d5e24</subsheetid><display x="15" y="-45" /><inputs><input type="text" name="Process Name" friendlyname="Process Name" narrative="The name of the process to kill" expr="&quot;EXCEL&quot;" /></inputs><onsuccess>c01e06f0-01d6-4da2-b8c8-e3739e97a804</onsuccess><resource object="Utility - Environment" action="Kill Process" /></stage><stage stageid="c91ebf4c-6f4e-41e6-9def-73664e9ea758" name="Open Workbook" type="Action"><subsheetid>525ccf90-1c11-4163-ab93-de13ae2d5e24</subsheetid><display x="15" y="135" /><inputs><input type="number" name="handle" friendlyname="handle" narrative="The integer handle identifying the instance on which the required workbook should be opened. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="File name" friendlyname="File name" narrative="The path and name of the file which should be opened." expr="[File Path]" /></inputs><outputs><output type="text" name="Workbook Name" friendlyname="Workbook Name" narrative="The name used by Excel to identify the workbook - usually this is the file name (without the path)." stage="Workbook Name" /></outputs><onsuccess>95a7a4ad-558b-460b-a97e-048d62660687</onsuccess><resource object="MS Excel VBO - Extended" action="Open Workbook" /></stage><stage stageid="1437acfd-1433-49fe-b3ac-152c0f37df16" name="Resume3" type="Resume"><subsheetid>525ccf90-1c11-4163-ab93-de13ae2d5e24</subsheetid><display x="240" y="195" /><onsuccess>95a7a4ad-558b-460b-a97e-048d62660687</onsuccess></stage><stage stageid="ea8aca01-7c6b-4995-a4b4-2de626d23d62" name="Exists" type="Block"><subsheetid>525ccf90-1c11-4163-ab93-de13ae2d5e24</subsheetid><display x="-30" y="105" w="195" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="d4989af5-b721-4b01-b85a-74f4e8a1abd9" name="Variables" type="Block"><subsheetid>525ccf90-1c11-4163-ab93-de13ae2d5e24</subsheetid><display x="-270" y="-45" w="150" h="150" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="c01e06f0-01d6-4da2-b8c8-e3739e97a804" name="Create File Path" type="Calculation"><subsheetid>525ccf90-1c11-4163-ab93-de13ae2d5e24</subsheetid><display x="15" y="15" /><onsuccess>1846ddcf-6e73-439b-91e0-4b3330748ef4</onsuccess><calculation expression="[Eduard_Haponov - Weather API - Output Folder Path]&amp;&quot;Output - &quot; &amp;[File Name]" stage="File Path" /></stage><stage stageid="f4d0d266-6831-434d-a4f8-b2648b6105dd" name="File Path" type="Data"><subsheetid>525ccf90-1c11-4163-ab93-de13ae2d5e24</subsheetid><display x="-195" y="45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="005c162f-94f9-4bda-867c-888043046806" name="Write to Log File" type="SubSheetInfo"><subsheetid>0484bd28-d4c0-46e0-9607-3a86818aecf6</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="103850af-2d2f-43a0-8335-5074fa6ddc8d" name="Start" type="Start"><subsheetid>0484bd28-d4c0-46e0-9607-3a86818aecf6</subsheetid><display x="15" y="-105" /><onsuccess>0c79b8cf-f718-45db-a8fd-5c368969a54b</onsuccess></stage><stage stageid="38d4f594-73ca-4134-9bf3-e7ef77beeb82" name="End" type="End"><subsheetid>0484bd28-d4c0-46e0-9607-3a86818aecf6</subsheetid><display x="15" y="75" /></stage><stage stageid="afc2e303-33e3-4c0f-baeb-1d5676725773" name="Message" type="Data"><subsheetid>0484bd28-d4c0-46e0-9607-3a86818aecf6</subsheetid><display x="-195" y="15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="16a4ed4e-f5f7-446c-8e99-d5399e94eeed" name="Path" type="Data"><subsheetid>0484bd28-d4c0-46e0-9607-3a86818aecf6</subsheetid><display x="-195" y="-15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0c79b8cf-f718-45db-a8fd-5c368969a54b" name="Append to Log File" type="Action"><subsheetid>0484bd28-d4c0-46e0-9607-3a86818aecf6</subsheetid><display x="15" y="-45" /><inputs><input type="text" name="File Name" narrative="The full path of the text file to append to" expr="[Eduard_Haponov - Weather API - File Errors Path]" /><input type="text" name="Text" narrative="The text to append to the file" expr="FormatDateTime(Today()&amp;&quot; &quot;&amp;LocalTime(), &quot;dd/MM/yyyy HH:mm:ss&quot;)&amp;&quot; - &quot;&amp;[Exception Type]&amp; &quot; - &quot; &amp;[Exception Detail]" /></inputs><outputs><output type="flag" name="Success" narrative="True if successful" stage="Success" /><output type="text" name="Message" narrative="An error message if unsuccessful" stage="Message" /></outputs><onsuccess>128df879-89f2-4c62-8866-782e5ae0050e</onsuccess><resource object="Utility - File Management" action="Append to Text File" /></stage><stage stageid="ff9af237-2a28-4e27-888d-87435da8bb37" name="Success" type="Data"><subsheetid>0484bd28-d4c0-46e0-9607-3a86818aecf6</subsheetid><display x="-195" y="45" w="120" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="128df879-89f2-4c62-8866-782e5ae0050e" name="Succeeded?" type="Decision"><subsheetid>0484bd28-d4c0-46e0-9607-3a86818aecf6</subsheetid><display x="15" y="15" /><decision expression="[Success]" /><ontrue>38d4f594-73ca-4134-9bf3-e7ef77beeb82</ontrue><onfalse>114caaaf-1493-4fd9-8c95-18b55827d1dd</onfalse></stage><stage stageid="114caaaf-1493-4fd9-8c95-18b55827d1dd" name="System Exception" type="Exception"><subsheetid>0484bd28-d4c0-46e0-9607-3a86818aecf6</subsheetid><display x="150" y="15" w="90" h="30" /><exception type="System Exception" detail="&quot;Failed to write out to log file.&quot;" /></stage><stage stageid="199e3433-832d-4d3d-9af4-f75dbfff1c00" name="Block1" type="Block"><subsheetid>0484bd28-d4c0-46e0-9607-3a86818aecf6</subsheetid><display x="-270" y="-45" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="a41e6e3c-e4d0-4039-b0a6-42ae5512e9e0" name="Reset Global Data" type="SubSheetInfo"><subsheetid>deb1d248-85cc-4044-aa70-498cc7573461</subsheetid><narrative>This page is only used to reset global data items</narrative><display x="-165" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="1eb589b9-a1ec-4fe2-976f-ed8e6bb8d0c2" name="Start" type="Start"><subsheetid>deb1d248-85cc-4044-aa70-498cc7573461</subsheetid><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>0ead6974-ffa2-4db3-bdfc-5668d2bc9d03</onsuccess></stage><stage stageid="0ead6974-ffa2-4db3-bdfc-5668d2bc9d03" name="End" type="End"><subsheetid>deb1d248-85cc-4044-aa70-498cc7573461</subsheetid><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="ec79e665-11f3-43d2-b0eb-d3697c492128" name="Exception Detail" type="Data"><subsheetid>deb1d248-85cc-4044-aa70-498cc7573461</subsheetid><display x="-165" y="15" w="150" h="30" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="55115b85-180e-4cca-adf4-8231f9388991" name="Exception Type" type="Data"><subsheetid>deb1d248-85cc-4044-aa70-498cc7573461</subsheetid><display x="-165" y="-15" w="150" h="30" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="9aed0d12-1ffa-4716-ac61-a0b58e411921" name="Write to Log File" type="SubSheet"><display x="360" y="600" w="90" h="60" /><onsuccess>d1c68978-5e06-4fea-8095-86c7d57250ab</onsuccess><processid>0484bd28-d4c0-46e0-9607-3a86818aecf6</processid></stage><stage stageid="6fc9e300-05e9-4035-b2d0-1b96baba5f57" name="Exception Data" type="MultipleCalculation"><display x="15" y="510" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>34c010da-dfc1-476d-8af5-e8d1367fb7fe</onsuccess><steps><calculation expression="ExceptionType()" stage="Exception Type" /><calculation expression="ExceptionDetail()" stage="Exception Detail" /></steps></stage><stage stageid="d385fa10-7dfe-4d61-8875-ae99105fe6aa" name="01 - Get JSON " type="SubSheetInfo"><subsheetid>de6b91e2-efec-4684-947d-8afe365997c7</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="8f4de0d7-0797-40d7-86a6-70cbd7145867" name="Start" type="Start"><subsheetid>de6b91e2-efec-4684-947d-8afe365997c7</subsheetid><display x="15" y="-105" /><onsuccess>8394f918-392d-45f1-b326-49a1a7a8d28d</onsuccess></stage><stage stageid="8394f918-392d-45f1-b326-49a1a7a8d28d" name="Get Weather for City" type="Action"><subsheetid>de6b91e2-efec-4684-947d-8afe365997c7</subsheetid><display x="15" y="-30" /><inputs><input type="text" name="City" friendlyname="City" expr="[Item Data.City]" /><input type="text" name="Units" friendlyname="Units" expr="[Item Data.Units]" /></inputs><outputs><output type="text" name="Response Content" friendlyname="Response Content" stage="Response Content" /><output type="text" name="HTTP Status Code" friendlyname="HTTP Status Code" stage="HTTP Status Code" /><output type="collection" name="Response Headers" friendlyname="Response Headers" stage="Response Headers" /></outputs><onsuccess>a5260def-f9e0-49c4-b8c5-adff60ad094d</onsuccess><resource object="Eduard_Haponov - OpenWeather Web API Service" action="Get Weather for City" /></stage><stage stageid="a2229977-5e7a-423a-ace4-6187aa12917a" name="Response Content" type="Data"><subsheetid>de6b91e2-efec-4684-947d-8afe365997c7</subsheetid><display x="-195" y="45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e4c2cb4f-b398-4eba-be09-7bfe06affeba" name="HTTP Status Code" type="Data"><subsheetid>de6b91e2-efec-4684-947d-8afe365997c7</subsheetid><display x="-195" y="-15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="93de60ea-39db-4b83-a8bc-3537302390d1" name="Response Headers" type="Collection"><subsheetid>de6b91e2-efec-4684-947d-8afe365997c7</subsheetid><display x="-195" y="15" w="120" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="a5260def-f9e0-49c4-b8c5-adff60ad094d" name="End" type="End"><subsheetid>de6b91e2-efec-4684-947d-8afe365997c7</subsheetid><display x="15" y="45" /><outputs><output type="text" name="Response Content" stage="Response Content" /></outputs></stage><stage stageid="1b6c2926-9a27-4952-a1f2-2a197e0913af" name="Output" type="Block"><subsheetid>de6b91e2-efec-4684-947d-8afe365997c7</subsheetid><display x="-270" y="-45" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="FFFF00" /></stage><stage stageid="994d0ec6-4ab8-4841-8fb9-35f9626a2a33" name="01 - Get JSON " type="SubSheet"><display x="15" y="255" w="90" h="60" /><outputs><output type="text" name="Response Content" friendlyname="Response Content" stage="Response Content" /></outputs><onsuccess>6a507a7e-b5c6-4b3e-bf97-ed65a20823b8</onsuccess><processid>de6b91e2-efec-4684-947d-8afe365997c7</processid></stage><stage stageid="2ffe81a8-c0c3-4fe2-a47d-f7e36aeaedd6" name="Response Content" type="Data"><display x="-195" y="60" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b3f6370f-4b99-45aa-9477-d36bc62686fb" name="Process Settings" type="Block"><display x="-285" y="-45" w="180" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FF00FF" /></stage><stage stageid="4c922e87-fe27-431f-8269-7da41c4f1a5a" name="02 - From JSON to Collection" type="SubSheetInfo"><subsheetid>ed39eccf-5062-43d2-8f56-1a09243be45b</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="90f81a36-0ffd-4a5d-856c-8efe844466f8" name="Start" type="Start"><subsheetid>ed39eccf-5062-43d2-8f56-1a09243be45b</subsheetid><display x="15" y="-105" /><inputs><input type="text" name="Response Content" stage="Response Content" /></inputs><onsuccess>444979a3-70f0-4bf8-a6bb-53f6685aefd1</onsuccess></stage><stage stageid="c981c3ee-2f2e-4662-baff-20f85060a451" name="End" type="End"><subsheetid>ed39eccf-5062-43d2-8f56-1a09243be45b</subsheetid><display x="15" y="300" /><outputs><output type="collection" name="Result" stage="Result" /><output type="text" name="File Name" stage="File Name" /></outputs></stage><stage stageid="444979a3-70f0-4bf8-a6bb-53f6685aefd1" name="JSON to Collection" type="Action"><subsheetid>ed39eccf-5062-43d2-8f56-1a09243be45b</subsheetid><display x="15" y="-45" /><inputs><input type="text" name="json" friendlyname="json" expr="[Response Content]" /></inputs><outputs><output type="collection" name="Result" friendlyname="Result" stage="Result from JSON" /></outputs><onsuccess>a2a1ac5a-7f36-4d41-8e92-01b0d0a179df</onsuccess><resource object="Utility - JSON" action="JSON to Collection" /></stage><stage stageid="2472076a-8870-415b-834a-5d72c796930e" name="Result from JSON" type="Collection"><subsheetid>ed39eccf-5062-43d2-8f56-1a09243be45b</subsheetid><display x="-195" y="75" w="120" h="60" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="d89009e4-0364-40a6-b21a-95f37884ad6a" name="Result" type="Collection"><subsheetid>ed39eccf-5062-43d2-8f56-1a09243be45b</subsheetid><display x="-195" y="255" w="120" h="60" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="name" type="text" /><field name="country " type="text" /><field name="temp " type="text" /><field name="description" type="text" /><field name="feels_like" type="text" /><field name="temp_max" type="text" /><field name=" temp_min " type="text" /><field name="humidity" type="text" /><field name="speed" type="text" /><field name="pressure" type="text" /></collectioninfo><initialvalue><row><field name="name" type="text" value="" /><field name="country " type="text" value="" /><field name="temp " type="text" value="0" /><field name="description" type="text" value="" /><field name="feels_like" type="text" value="0" /><field name="temp_max" type="text" value="0" /><field name=" temp_min " type="text" value="0" /><field name="humidity" type="text" value="0" /><field name="speed" type="text" value="0" /><field name="pressure" type="text" value="0" /></row></initialvalue></stage><stage stageid="b271c444-fabc-45dd-8ad9-e09727851be1" name="Save value to Result Collection" type="MultipleCalculation"><subsheetid>ed39eccf-5062-43d2-8f56-1a09243be45b</subsheetid><display x="15" y="105" w="90" h="60" /><onsuccess>caeae808-5a29-467f-ba3c-bc91a557fcaf</onsuccess><steps><calculation expression="[Result from JSON.name]" stage="Result.name" /><calculation expression="[Result from JSON.sys.country]" stage="Result.country " /><calculation expression="[Result from JSON.main.temp]&amp;&quot; &quot;&amp;[Fahrenheit or Celsius]" stage="Result.temp " /><calculation expression="Upper(Left([Result from JSON.weather.JSON:Array.description], 1))&amp;Mid([Result from JSON.weather.JSON:Array.description], 2, Len([Result from JSON.weather.JSON:Array.description]))" stage="Result.description" /><calculation expression="[Result from JSON.main.feels_like]&amp;&quot; &quot;&amp;[Fahrenheit or Celsius]" stage="Result.feels_like" /><calculation expression="[Result from JSON.main.temp_max]&amp;&quot; &quot;&amp;[Fahrenheit or Celsius]" stage="Result.temp_max" /><calculation expression="[Result from JSON.main.temp_min]&amp;&quot; &quot;&amp;[Fahrenheit or Celsius]" stage="Result. temp_min " /><calculation expression="[Result from JSON.main.humidity]&amp;&quot; &quot;&amp;&quot;%&quot;" stage="Result.humidity" /><calculation expression="[Result from JSON.wind.speed]&amp; &quot; &quot;&amp;[m/h or m/s]" stage="Result.speed" /><calculation expression="[Result from JSON.main.pressure]&amp;&quot; &quot;&amp;&quot;hPa&quot;" stage="Result.pressure" /></steps></stage><stage stageid="13a7750a-d5a3-4bd3-bc96-3a7d14a3f2ef" name="Response Content" type="Data"><subsheetid>ed39eccf-5062-43d2-8f56-1a09243be45b</subsheetid><display x="-195" y="-15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e9e3d404-2b8b-47d0-852a-34df86827157" name="Input" type="Block"><subsheetid>ed39eccf-5062-43d2-8f56-1a09243be45b</subsheetid><display x="-270" y="-45" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="00FF00" /></stage><stage stageid="3d0163d8-7bed-486d-a776-b00759dc21ba" name="Variables" type="Block"><subsheetid>ed39eccf-5062-43d2-8f56-1a09243be45b</subsheetid><display x="-270" y="30" w="150" h="165" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="bc16bd37-bfd5-405f-bbc6-fce2afc5bcd3" name="Output" type="Block"><subsheetid>ed39eccf-5062-43d2-8f56-1a09243be45b</subsheetid><display x="-270" y="210" w="150" h="135" /><font family="Segoe UI" size="10" style="Regular" color="FFFF00" /></stage><stage stageid="f8a7a7b3-a388-46af-b784-4b577daef605" name="Variables" type="Block"><display x="-285" y="30" w="180" h="150" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="7aacbacc-daa8-408a-926b-a511f5b13f91" name="Fahrenheit or Celsius" type="Data"><subsheetid>ed39eccf-5062-43d2-8f56-1a09243be45b</subsheetid><display x="-195" y="135" w="120" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">°F</initialvalue><private /><alwaysinit /></stage><stage stageid="a2a1ac5a-7f36-4d41-8e92-01b0d0a179df" name="is not Fahrenheit?" type="Decision"><subsheetid>ed39eccf-5062-43d2-8f56-1a09243be45b</subsheetid><display x="15" y="15" /><decision expression="Lower([Item Data.Units]) = &quot;metric&quot;" /><ontrue>7b712bef-704f-4dcb-91b3-3d22e7b98027</ontrue><onfalse>b271c444-fabc-45dd-8ad9-e09727851be1</onfalse></stage><stage stageid="4f5e5470-1deb-4d8b-b5a8-8b8d23fe8986" name="Anchor4" type="Anchor"><subsheetid>ed39eccf-5062-43d2-8f56-1a09243be45b</subsheetid><display x="120" y="105" w="10" h="10" /><onsuccess>b271c444-fabc-45dd-8ad9-e09727851be1</onsuccess></stage><stage stageid="6a507a7e-b5c6-4b3e-bf97-ed65a20823b8" name="02 - From JSON to Collection" type="SubSheet"><display x="15" y="345" w="90" h="60" /><inputs><input type="text" name="Response Content" friendlyname="Response Content" expr="[Response Content]" /></inputs><outputs><output type="collection" name="Result" friendlyname="Result" stage="Result" /><output type="text" name="File Name" friendlyname="File Name" stage="File Name" /></outputs><onsuccess>716e7b98-63b9-479c-86ce-d769ae9ff5cc</onsuccess><processid>ed39eccf-5062-43d2-8f56-1a09243be45b</processid></stage><stage stageid="514a61f7-bbf4-462b-b330-35ef7e824319" name="m/h or m/s" type="Data"><subsheetid>ed39eccf-5062-43d2-8f56-1a09243be45b</subsheetid><display x="-195" y="165" w="120" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">m/h</initialvalue><private /><alwaysinit /></stage><stage stageid="7b712bef-704f-4dcb-91b3-3d22e7b98027" name="Make Celsius and m/s" type="MultipleCalculation"><subsheetid>ed39eccf-5062-43d2-8f56-1a09243be45b</subsheetid><display x="120" y="15" /><onsuccess>4f5e5470-1deb-4d8b-b5a8-8b8d23fe8986</onsuccess><steps><calculation expression="&quot;°C&quot;" stage="Fahrenheit or Celsius" /><calculation expression="&quot;m/s&quot;" stage="m/h or m/s" /></steps></stage><stage stageid="e6b05bbc-d30b-4ed4-ba6f-18586b15ec6b" name="Result" type="Collection"><display x="-195" y="105" w="150" h="60" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="bfb678a3-e0bb-4f69-bb7e-2582c6aeccb7" name="Environment Variables" type="Block"><display x="-480" y="-45" w="180" h="105" /><font family="Segoe UI" size="10" style="Regular" color="FFCC00" /></stage><stage stageid="2b6adb6f-a518-4ae4-978d-01fec518553b" name="Eduard_Haponov - Weather API - File Errors Path" type="Data"><display x="-390" y="-15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">E:\Documents\BluePrism\Weather API\ErrorMessage.txt</initialvalue><exposure>Environment</exposure><alwaysinit /></stage><stage stageid="8e779610-c646-4b5e-b549-f7691cc52847" name="Result" type="Collection"><subsheetid>525ccf90-1c11-4163-ab93-de13ae2d5e24</subsheetid><display x="-195" y="-150" w="120" h="60" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="acc897d9-3f58-4ffa-b701-73e7a0cbfe1f" name="Input" type="Block"><subsheetid>525ccf90-1c11-4163-ab93-de13ae2d5e24</subsheetid><display x="-270" y="-195" w="150" h="135" /><font family="Segoe UI" size="10" style="Regular" color="00FF00" /></stage><stage stageid="be3fd07a-d828-480a-8792-92ed1e8534ff" name="Work" type="Block"><display x="-60" y="195" w="150" h="255" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="295c263e-f7ca-483c-9765-99cbd9765898" name="Recover2" type="Recover"><display x="15" y="405" /><onsuccess>6fc9e300-05e9-4035-b2d0-1b96baba5f57</onsuccess></stage><stage stageid="c019e3ed-8bf6-488d-a7ab-4952a492e745" name="Populate City " type="SubSheetInfo"><subsheetid>5181367c-e4f8-4a5f-ad0b-9c1dedb44de9</subsheetid><display x="-255" y="-135" w="210" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="d84d3602-c3b1-40aa-8aed-b883b08345d3" name="Start" type="Start"><subsheetid>5181367c-e4f8-4a5f-ad0b-9c1dedb44de9</subsheetid><display x="15" y="-165" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>354c9278-c8f4-4dbb-8c47-829784d1b037</onsuccess></stage><stage stageid="2d82af6b-be36-48da-9929-d47786e7004f" name="End" type="End"><subsheetid>5181367c-e4f8-4a5f-ad0b-9c1dedb44de9</subsheetid><display x="15" y="1335" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="8a592e5c-2c3c-40de-805b-f4adf42c3518" name="Load Work Block" type="Block"><subsheetid>5181367c-e4f8-4a5f-ad0b-9c1dedb44de9</subsheetid><display x="-75" y="360" w="210" h="300" /><font family="Tahoma" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="0a15b7cc-3dee-4283-97a4-701f527fd715" name="System Exception: Reading File" type="Exception"><subsheetid>5181367c-e4f8-4a5f-ad0b-9c1dedb44de9</subsheetid><display x="675" y="585" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception localized="yes" type="System Exception" detail="&quot;Error Reading File&quot; &amp; &quot;Original Exception&quot; &amp;[Exception Type]&amp;&quot;:&quot;&amp; [Exception Detail]" /></stage><stage stageid="0d70c77c-2ee4-48e2-9bfc-826e077d65cc" name="Create Excel Instance" type="Action"><subsheetid>5181367c-e4f8-4a5f-ad0b-9c1dedb44de9</subsheetid><display x="15" y="270" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Enable Events" narrative="Flag to indicate that events should be enabled / disabled on the attached instance - defaulted to True" expr="False" /></inputs><outputs><output type="number" name="handle" narrative="An integer which can be used to identify the created instance in subsequent actions" stage="Handle" /></outputs><onsuccess>5da0a073-426b-42cf-95cd-fe7bc8994cf0</onsuccess><resource object="MS Excel VBO" action="Create Instance" /></stage><stage stageid="1232e581-88a6-4789-9865-28bd4be728e7" name="Handle" type="Data"><subsheetid>5181367c-e4f8-4a5f-ad0b-9c1dedb44de9</subsheetid><display x="-255" y="150" w="180" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e5003882-347e-4054-b71e-0426d443b45d" name="Open File" type="Action"><subsheetid>5181367c-e4f8-4a5f-ad0b-9c1dedb44de9</subsheetid><display x="15" y="390" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required workbook should be opened. The default of zero indicates the currently active instance." expr="[Handle]" /><input type="text" name="File name" narrative="The path and name of the file which should be opened." expr="[Files.Path]" /></inputs><outputs><output type="text" name="Workbook Name" narrative="The name used by Excel to identify the workbook - usually this is the file name (without the path)." stage="Workbook Name" /></outputs><onsuccess>d476e702-038b-4fba-b370-57a8daffcc06</onsuccess><resource object="MS Excel VBO" action="Open Workbook" /></stage><stage stageid="c1717348-df71-4919-9da6-b592c343b3bd" name="Workbook Name" type="Data"><subsheetid>5181367c-e4f8-4a5f-ad0b-9c1dedb44de9</subsheetid><display x="-255" y="180" w="180" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d476e702-038b-4fba-b370-57a8daffcc06" name="Read File" type="Action"><subsheetid>5181367c-e4f8-4a5f-ad0b-9c1dedb44de9</subsheetid><display x="15" y="435" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the worksheet which should be retrieved resides. The default of zero indicates the currently active instance." expr="[Handle]" /><input type="text" name="Workbook Name" narrative="The name of the workbook which contains the sheet required. The default empty text indicates the currently active workbook on the specified instance." expr="[Workbook Name]" /><input type="text" name="Worksheet Name" narrative="The name of the worksheet within the specified workbook which should be written to a collection. The default empty text indicates the currently active worksheet within the specified workbook." expr="" /></inputs><outputs><output type="collection" name="Data" narrative="The collection containing the data from the specified worksheet - the column IDs will be gleaned from the first row on the sheet being retrieved." stage="File Data" /></outputs><onsuccess>9da2278c-ec83-45b0-9e95-f0a091dd634c</onsuccess><resource object="MS Excel VBO" action="Get Worksheet As Collection" /></stage><stage stageid="158bf1bd-eda6-4f82-b58e-4af7d0afe9f4" name="File Data" type="Collection"><subsheetid>5181367c-e4f8-4a5f-ad0b-9c1dedb44de9</subsheetid><display x="-255" y="285" w="180" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="9da2278c-ec83-45b0-9e95-f0a091dd634c" name="Close Workbook" type="Action"><subsheetid>5181367c-e4f8-4a5f-ad0b-9c1dedb44de9</subsheetid><display x="15" y="735" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the workbook which should be closed resides. The default of zero indicates the currently active instance." expr="[Handle]" /></inputs><onsuccess>e75e7036-8af1-44c5-b899-4521ec4c8120</onsuccess><resource object="MS Excel VBO" action="Close Current Workbook" /></stage><stage stageid="354c9278-c8f4-4dbb-8c47-829784d1b037" name="Get Files" type="Action"><subsheetid>5181367c-e4f8-4a5f-ad0b-9c1dedb44de9</subsheetid><display x="15" y="-105" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Folder" narrative="The folder in which to look for files" expr="[Eduard_Haponov - Weather API - Input File Folder Path]" /><input type="text" name="Patterns CSV" narrative="The comma seperated list of wildcard patterns" expr="[File Pattern]" /></inputs><outputs><output type="flag" name="Success" narrative="True if successful" stage="Success" /><output type="text" name="Message" narrative="A message if unsuccessful" stage="Message" /><output type="collection" name="Files" narrative="The collection of files found" stage="Files" /></outputs><onsuccess>764f97bb-b366-4033-be11-a0da994e267f</onsuccess><resource object="Utility - File Management" action="Get Files" /></stage><stage stageid="26637233-25b4-4a8a-99f5-e098a56c3b09" name="Success" type="Data"><subsheetid>5181367c-e4f8-4a5f-ad0b-9c1dedb44de9</subsheetid><display x="-255" y="60" w="180" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="56b03321-590c-484a-927f-309b728dafc4" name="Message" type="Data"><subsheetid>5181367c-e4f8-4a5f-ad0b-9c1dedb44de9</subsheetid><display x="-255" y="90" w="180" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="681df77a-e653-4954-819c-d7826b03b315" name="Files" type="Collection"><subsheetid>5181367c-e4f8-4a5f-ad0b-9c1dedb44de9</subsheetid><display x="-255" y="225" w="180" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="1224635f-09cb-4bce-9161-e7be38278f14" name="File Pattern" type="Data"><subsheetid>5181367c-e4f8-4a5f-ad0b-9c1dedb44de9</subsheetid><display x="-255" y="120" w="180" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">*.xls*</initialvalue><private /><alwaysinit /></stage><stage stageid="5da0a073-426b-42cf-95cd-fe7bc8994cf0" name="Files" type="LoopStart"><subsheetid>5181367c-e4f8-4a5f-ad0b-9c1dedb44de9</subsheetid><display x="15" y="330" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>e5003882-347e-4054-b71e-0426d443b45d</onsuccess><groupid>69b38b38-a7b0-4ea7-9d46-367754ea7043</groupid><looptype>ForEach</looptype><loopdata>Files</loopdata></stage><stage stageid="a619f97e-d26e-4728-bc86-a9156edfbf5a" name="Files" type="LoopEnd"><subsheetid>5181367c-e4f8-4a5f-ad0b-9c1dedb44de9</subsheetid><display x="15" y="1275" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>2d82af6b-be36-48da-9929-d47786e7004f</onsuccess><groupid>69b38b38-a7b0-4ea7-9d46-367754ea7043</groupid></stage><stage stageid="764f97bb-b366-4033-be11-a0da994e267f" name="Success?" type="Decision"><subsheetid>5181367c-e4f8-4a5f-ad0b-9c1dedb44de9</subsheetid><display x="15" y="-30" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>39b3a2d1-145f-43e5-ac3c-2c5cba86cc78</ontrue><onfalse>3ceef566-11b8-4cdf-975f-c377ccdb8b20</onfalse></stage><stage stageid="3ceef566-11b8-4cdf-975f-c377ccdb8b20" name="System Exception" type="Exception"><subsheetid>5181367c-e4f8-4a5f-ad0b-9c1dedb44de9</subsheetid><display x="315" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="System Exception" detail="&quot;Error occured when looking for Excel files: &quot; &amp; [Message]" /></stage><stage stageid="40d62178-73d3-47f9-9b0e-ca42979759fd" name="Kill Excel" type="Action"><subsheetid>5181367c-e4f8-4a5f-ad0b-9c1dedb44de9</subsheetid><display x="15" y="210" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Process Name" narrative="The name of the process to kill" expr="&quot;EXCEL&quot;" /></inputs><onsuccess>0d70c77c-2ee4-48e2-9bfc-826e077d65cc</onsuccess><resource object="Utility - Environment" action="Kill Process" /></stage><stage stageid="21672600-a16d-4c6a-a0a7-494255bdd9b1" name="Eduard_Haponov - Weather API - Input File Folder Path" type="Data"><subsheetid>5181367c-e4f8-4a5f-ad0b-9c1dedb44de9</subsheetid><display x="-255" y="-45" w="180" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">C:\Users\Софія\Documents\BluePrism\CE</initialvalue><exposure>Environment</exposure><private /><alwaysinit /></stage><stage stageid="01c46a93-354c-434e-b73b-7ebe533ce683" name="Environment Variable" type="Block"><subsheetid>5181367c-e4f8-4a5f-ad0b-9c1dedb44de9</subsheetid><display x="-360" y="-75" w="210" h="90" /><font family="Tahoma" size="10" style="Regular" color="FFCC00" /></stage><stage stageid="e75e7036-8af1-44c5-b899-4521ec4c8120" name="File Data" type="LoopStart"><subsheetid>5181367c-e4f8-4a5f-ad0b-9c1dedb44de9</subsheetid><display x="150" y="735" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>688d33cb-300f-4224-b7bf-c51854553b8f</onsuccess><groupid>a6d90628-6105-469d-81f5-8194304d4b77</groupid><looptype>ForEach</looptype><loopdata>File Data</loopdata></stage><stage stageid="684ed3b8-27d6-47b9-9804-1bc38a864f9b" name="File Data" type="LoopEnd"><subsheetid>5181367c-e4f8-4a5f-ad0b-9c1dedb44de9</subsheetid><display x="150" y="1035" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>d7809184-c0c4-4880-b5f6-efdbd0f61675</onsuccess><groupid>a6d90628-6105-469d-81f5-8194304d4b77</groupid></stage><stage stageid="d0fe4226-a081-4696-9555-69cfc5e51bf5" name="Quote Item" type="Collection"><subsheetid>5181367c-e4f8-4a5f-ad0b-9c1dedb44de9</subsheetid><display x="-255" y="435" w="180" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="City" type="text" /><field name="City ID" type="text" /><field name="File Name" type="text" /><field name="Units" type="text" /></collectioninfo><initialvalue><row><field name="City" type="text" value="" /><field name="City ID" type="text" value="" /><field name="File Name" type="text" value="" /><field name="Units" type="text" value="" /></row></initialvalue></stage><stage stageid="688d33cb-300f-4224-b7bf-c51854553b8f" name="Create Quote Case" type="MultipleCalculation"><subsheetid>5181367c-e4f8-4a5f-ad0b-9c1dedb44de9</subsheetid><display x="150" y="780" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>47a91b74-67f1-460e-b581-097d311b2fce</onsuccess><steps><calculation expression="[File Data.City]&amp;FormatDate(Today(), &quot;dd MMM, yyyy&quot;)" stage="Quote Item.City ID" /><calculation expression="[File Data.City]" stage="Quote Item.City" /><calculation expression="[Files.Name]" stage="Quote Item.File Name" /><calculation expression="[File Data.Units]" stage="Quote Item.Units" /></steps></stage><stage stageid="24e3044c-c22a-4404-9ebf-4f48035c46f2" name="Item IDs" type="Collection"><subsheetid>5181367c-e4f8-4a5f-ad0b-9c1dedb44de9</subsheetid><display x="-255" y="540" w="180" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><singlerow /><field name="Item ID" type="text" description="The Item ID of the work queue item" /></collectioninfo><initialvalue><singlerow /><row><field name="Item ID" type="text" value="" /></row></initialvalue></stage><stage stageid="d18daac5-4e17-4435-a16d-deec693c5daa" name="Note8" type="Note"><subsheetid>5181367c-e4f8-4a5f-ad0b-9c1dedb44de9</subsheetid><narrative>Move File to Archive Folder and Rename</narrative><display x="15" y="1110" w="150" h="30" /><font family="Tahoma" size="10" style="Bold" color="000000" /><onsuccess>74b0ae78-fe36-4d7a-b4ce-ecac19c35444</onsuccess></stage><stage stageid="47a91b74-67f1-460e-b581-097d311b2fce" name="Is Item in queue already?" type="Action"><subsheetid>5181367c-e4f8-4a5f-ad0b-9c1dedb44de9</subsheetid><narrative>Check if an item with the given key is already in the queue</narrative><display x="150" y="840" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Queue Name" narrative="The name of the queue to check" expr="[Queue Name]" /><input type="text" name="Key" narrative="The key to check." expr="[File Data.City]&amp;FormatDate(Today(), &quot;dd MMM, yyyy&quot;)" /><input type="flag" name="Include Pending" narrative="Check any items in the queue which are currently awaiting being worked. This will include any deferred items which have a deferral date in the past and any locked items. Optional - Default is True" expr="True" /><input type="flag" name="Include Deferred" narrative="Check any items in the queue which are currently deferred to a later date. Optional - Default is True" expr="True" /><input type="flag" name="Include Completed" narrative="Check any items in the queue which are completed. Optional - Default is True" expr="True" /><input type="flag" name="Include Terminated" narrative="Check any items in the queue which have been fully terminated. Optional - Default is True" expr="True" /></inputs><outputs><output type="flag" name="Result" narrative="True if an item with the given key is in the queue, False otherwise." stage="Result" /><output type="collection" name="Item IDs" narrative="The Item IDs which represent the work items found with the given key" stage="Item IDs" /></outputs><onsuccess>99015e9c-bad0-4fc1-9dda-45f75d1ef85b</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Is Item In Queue" /></stage><stage stageid="28c9bf07-4124-49c9-bbbc-ca80a9e99667" name="Result" type="Data"><subsheetid>5181367c-e4f8-4a5f-ad0b-9c1dedb44de9</subsheetid><display x="255" y="840" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="99015e9c-bad0-4fc1-9dda-45f75d1ef85b" name="In Queue?" type="Decision"><subsheetid>5181367c-e4f8-4a5f-ad0b-9c1dedb44de9</subsheetid><display x="150" y="900" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Result]" /><ontrue>2f63a4fe-e44f-4ecb-9487-9ac558d09ff8</ontrue><onfalse>ea6bd831-8851-4f12-94f2-db3db57d458c</onfalse></stage><stage stageid="2f63a4fe-e44f-4ecb-9487-9ac558d09ff8" name="anchor3" type="Anchor"><subsheetid>5181367c-e4f8-4a5f-ad0b-9c1dedb44de9</subsheetid><display x="60" y="900" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>4b537a06-046e-43ea-9a5c-2d0312cb92ab</onsuccess></stage><stage stageid="4b537a06-046e-43ea-9a5c-2d0312cb92ab" name="anchor4" type="Anchor"><subsheetid>5181367c-e4f8-4a5f-ad0b-9c1dedb44de9</subsheetid><display x="60" y="1035" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>684ed3b8-27d6-47b9-9804-1bc38a864f9b</onsuccess></stage><stage stageid="d7809184-c0c4-4880-b5f6-efdbd0f61675" name="anchor6" type="Anchor"><subsheetid>5181367c-e4f8-4a5f-ad0b-9c1dedb44de9</subsheetid><display x="150" y="1110" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>d18daac5-4e17-4435-a16d-deec693c5daa</onsuccess></stage><stage stageid="74b0ae78-fe36-4d7a-b4ce-ecac19c35444" name="Move File to Archive Folder" type="Action"><subsheetid>5181367c-e4f8-4a5f-ad0b-9c1dedb44de9</subsheetid><display x="15" y="1155" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Path" narrative="The full path to the file to move" expr="[Files.Path]" /><input type="text" name="Destination Path" narrative="The path to the folder to move the file to" expr="[Eduard_Haponov - Weather API - Archive Folder Path] &amp; Replace([Files.Name],&quot;.&quot;,Replace(FormatDateTime(Now(), &quot;dd.MM.yyyy&quot;),&quot; &quot;,&quot;&quot;)&amp; &quot;.&quot;)" /></inputs><outputs><output type="flag" name="Success" narrative="True if successful" stage="Success" /><output type="text" name="Message" narrative="An error message if unsuccessful" stage="Message" /></outputs><onsuccess>a44f731b-b1c9-4bac-8152-9ff217445f0f</onsuccess><resource object="Utility - File Management" action="Move File" /></stage><stage stageid="d206fda8-f34d-489e-abf2-cfda0daab2fd" name="Eduard_Haponov - Weather API - Archive Folder Path" type="Data"><subsheetid>5181367c-e4f8-4a5f-ad0b-9c1dedb44de9</subsheetid><display x="-255" y="-15" w="180" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">C:\Users\Софія\Documents\BluePrism\CE\Archive\</initialvalue><exposure>Environment</exposure><private /><alwaysinit /></stage><stage stageid="a44f731b-b1c9-4bac-8152-9ff217445f0f" name="Success" type="Decision"><subsheetid>5181367c-e4f8-4a5f-ad0b-9c1dedb44de9</subsheetid><display x="15" y="1215" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>a619f97e-d26e-4728-bc86-a9156edfbf5a</ontrue><onfalse>c90bb35d-fcb9-4ff7-8b8d-3124fdbbb27d</onfalse></stage><stage stageid="c90bb35d-fcb9-4ff7-8b8d-3124fdbbb27d" name="System Exception" type="Exception"><subsheetid>5181367c-e4f8-4a5f-ad0b-9c1dedb44de9</subsheetid><display x="480" y="1215" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="System Exception" detail="&quot;Error occured when moving quote file to archive folder: &quot; &amp; [Message]" /></stage><stage stageid="89562b0c-a739-40bc-8633-b743ef86496c" name="File Management and Excel" type="Block"><subsheetid>5181367c-e4f8-4a5f-ad0b-9c1dedb44de9</subsheetid><display x="-360" y="30" w="210" h="330" /><font family="Tahoma" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="10e4e50c-c27f-41d5-b44b-e1e40f07a177" name="Case Data to be added to queue" type="Block"><subsheetid>5181367c-e4f8-4a5f-ad0b-9c1dedb44de9</subsheetid><display x="-360" y="390" w="210" h="90" /><font family="Tahoma" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="2a6ab9b1-d70d-4aa8-b119-199a6e12da66" name="ID of case added to queue" type="Block"><subsheetid>5181367c-e4f8-4a5f-ad0b-9c1dedb44de9</subsheetid><display x="-360" y="495" w="210" h="90" /><font family="Tahoma" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="39b3a2d1-145f-43e5-ac3c-2c5cba86cc78" name="Count Rows" type="Action"><subsheetid>5181367c-e4f8-4a5f-ad0b-9c1dedb44de9</subsheetid><display x="15" y="45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Collection Name" narrative="The name of the collection to act upon" expr="&quot;Files&quot;" /></inputs><outputs><output type="number" name="Count" narrative="The number of rows counted in the collection" stage="Count" /></outputs><onsuccess>837ddb07-9b0b-463b-a96a-5916a52f88a0</onsuccess><resource object="Blueprism.AutomateProcessCore.clsCollectionActions" action="Count Rows" /></stage><stage stageid="837ddb07-9b0b-463b-a96a-5916a52f88a0" name="Files &gt;0" type="Decision"><subsheetid>5181367c-e4f8-4a5f-ad0b-9c1dedb44de9</subsheetid><display x="15" y="105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Count]&gt;0" /><ontrue>40d62178-73d3-47f9-9b0e-ca42979759fd</ontrue><onfalse>2df04f0a-8244-4c7c-a733-165255e09919</onfalse></stage><stage stageid="aa97f8ab-7893-47ed-a51e-5ff34a6737c6" name="Count" type="Data"><subsheetid>5181367c-e4f8-4a5f-ad0b-9c1dedb44de9</subsheetid><display x="-255" y="330" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2df04f0a-8244-4c7c-a733-165255e09919" name="End5" type="End"><subsheetid>5181367c-e4f8-4a5f-ad0b-9c1dedb44de9</subsheetid><display x="360" y="105" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="1a6cf6ab-71cf-4c87-befb-5c43d506e156" name="Write to Log File" type="SubSheet"><subsheetid>5181367c-e4f8-4a5f-ad0b-9c1dedb44de9</subsheetid><display x="570" y="585" /><onsuccess>0a15b7cc-3dee-4283-97a4-701f527fd715</onsuccess><processid>0484bd28-d4c0-46e0-9607-3a86818aecf6</processid></stage><stage stageid="66210b4f-768b-4965-93bc-bb6497bf61be" name="Recover" type="Recover"><subsheetid>5181367c-e4f8-4a5f-ad0b-9c1dedb44de9</subsheetid><display x="105" y="585" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>1681f7c4-6ec4-4da1-82df-f63225d49f48</onsuccess></stage><stage stageid="1681f7c4-6ec4-4da1-82df-f63225d49f48" name="Retry?" type="Decision"><subsheetid>5181367c-e4f8-4a5f-ad0b-9c1dedb44de9</subsheetid><display x="270" y="585" /><decision expression="[Retry Count]&lt;[Retry Limit] AND (Lower(ExceptionType()) =&quot;system exception&quot; OR Lower(ExceptionType()) =&quot;interval&quot;)" /><ontrue>b377ec40-06af-49ab-b290-284694897d55</ontrue><onfalse>8d94c11c-950f-4d29-b95c-b0efebfc78cf</onfalse></stage><stage stageid="2407385d-ca95-4f66-b456-80610a16eae4" name="Retry Limit" type="Data"><subsheetid>5181367c-e4f8-4a5f-ad0b-9c1dedb44de9</subsheetid><display x="270" y="645" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>3</initialvalue><private /><alwaysinit /></stage><stage stageid="602d8d35-aae2-4e36-92b7-060d713ba153" name="Retry Count" type="Data"><subsheetid>5181367c-e4f8-4a5f-ad0b-9c1dedb44de9</subsheetid><display x="270" y="675" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="b5718edc-b84d-4b87-abf2-7058760eaf00" name="Increment Retry Count" type="Calculation"><subsheetid>5181367c-e4f8-4a5f-ad0b-9c1dedb44de9</subsheetid><display x="270" y="495" /><onsuccess>9e62f2b9-39fa-4b79-ad80-cf132dc2b52f</onsuccess><calculation expression="[Retry Count] + 1" stage="Retry Count" /></stage><stage stageid="b377ec40-06af-49ab-b290-284694897d55" name="Resume3" type="Resume"><subsheetid>5181367c-e4f8-4a5f-ad0b-9c1dedb44de9</subsheetid><display x="270" y="540" /><onsuccess>b5718edc-b84d-4b87-abf2-7058760eaf00</onsuccess></stage><stage stageid="9e62f2b9-39fa-4b79-ad80-cf132dc2b52f" name="Close Workbook" type="Action"><subsheetid>5181367c-e4f8-4a5f-ad0b-9c1dedb44de9</subsheetid><display x="270" y="435" /><inputs><input type="number" name="handle" friendlyname="handle" narrative="The integer handle identifying the instance on which the workbook which should be closed resides. The default of zero indicates the currently active instance." expr="[Handle]" /><input type="text" name="Workbook Name" friendlyname="Workbook Name" narrative="The name of the workbook which should be closed." expr="[Workbook Name]" /><input type="flag" name="Save Data" friendlyname="Save Data" narrative="True to save the data before closing the workbook; The default of False will discard any changes before closing the workbook." expr="False" /></inputs><onsuccess>7226593b-b758-4791-b2ad-2db4ea538e75</onsuccess><resource object="MS Excel VBO" action="Close Workbook" /></stage><stage stageid="7226593b-b758-4791-b2ad-2db4ea538e75" name="Kill Excel" type="Action"><subsheetid>5181367c-e4f8-4a5f-ad0b-9c1dedb44de9</subsheetid><display x="195" y="435" /><inputs><input type="text" name="Process Name" friendlyname="Process Name" narrative="The name of the process to kill" expr="&quot;EXCEL&quot;" /></inputs><onsuccess>6ed80bbc-8c34-48d2-99c2-0ff02f60f7c6</onsuccess><resource object="Utility - Environment" action="Kill Process" /></stage><stage stageid="6ed80bbc-8c34-48d2-99c2-0ff02f60f7c6" name="Create Inctance" type="Action"><subsheetid>5181367c-e4f8-4a5f-ad0b-9c1dedb44de9</subsheetid><display x="105" y="435" /><inputs><input type="flag" name="Enable Events" friendlyname="Enable Events" narrative="Flag to indicate that events should be enabled / disabled on the attached instance - defaulted to True" expr="False" /></inputs><outputs><output type="number" name="handle" friendlyname="handle" narrative="An integer which can be used to identify the created instance in subsequent actions" stage="Handle" /></outputs><onsuccess>d476e702-038b-4fba-b370-57a8daffcc06</onsuccess><resource object="MS Excel VBO" action="Create Instance" /></stage><stage stageid="5911b4d8-8408-4067-a97f-e7c1cbaf0920" name="Close Excel Block" type="Block"><subsheetid>5181367c-e4f8-4a5f-ad0b-9c1dedb44de9</subsheetid><display x="150" y="360" w="165" h="105" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="5810938b-56f2-488b-965a-e5e2b9bf4414" name="Recover1" type="Recover"><subsheetid>5181367c-e4f8-4a5f-ad0b-9c1dedb44de9</subsheetid><display x="270" y="390" /><onsuccess>029e3a5a-29cd-46af-aaf0-0a159a74ee50</onsuccess></stage><stage stageid="029e3a5a-29cd-46af-aaf0-0a159a74ee50" name="Resume4" type="Resume"><subsheetid>5181367c-e4f8-4a5f-ad0b-9c1dedb44de9</subsheetid><display x="195" y="390" /><onsuccess>7226593b-b758-4791-b2ad-2db4ea538e75</onsuccess></stage><stage stageid="8d94c11c-950f-4d29-b95c-b0efebfc78cf" name="Save Exception Details" type="MultipleCalculation"><subsheetid>5181367c-e4f8-4a5f-ad0b-9c1dedb44de9</subsheetid><display x="375" y="585" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>766d3deb-a837-4208-8393-b294b705db7d</onsuccess><steps><calculation expression="ExceptionType()" stage="Exception Type" /><calculation expression="ExceptionDetail()" stage="Exception Detail" /></steps></stage><stage stageid="766d3deb-a837-4208-8393-b294b705db7d" name="Resume5" type="Resume"><subsheetid>5181367c-e4f8-4a5f-ad0b-9c1dedb44de9</subsheetid><display x="480" y="585" /><onsuccess>1a6cf6ab-71cf-4c87-befb-5c43d506e156</onsuccess></stage><stage stageid="2fc75eca-609e-4194-9839-c0db08dfe439" name="Wrtite to Log Block" type="Block"><subsheetid>5181367c-e4f8-4a5f-ad0b-9c1dedb44de9</subsheetid><display x="525" y="555" w="90" h="105" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="789b99d7-f5f7-4564-8198-2da0a8efc596" name="Recover2" type="Recover"><subsheetid>5181367c-e4f8-4a5f-ad0b-9c1dedb44de9</subsheetid><display x="570" y="630" /><onsuccess>a7bf28e3-e5fb-454b-b632-9911ce6e4cd4</onsuccess></stage><stage stageid="a7bf28e3-e5fb-454b-b632-9911ce6e4cd4" name="System Exception: Writing to Log" type="Exception"><subsheetid>5181367c-e4f8-4a5f-ad0b-9c1dedb44de9</subsheetid><display x="570" y="690" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception localized="yes" type="System Exception" detail="&quot;Error Writing to Log&quot; &amp;ExceptionDetail() &amp; &quot;Original Exception&quot; &amp;[Exception Type]&amp;&quot;:&quot;&amp; [Exception Detail]&#xA;" /></stage><stage stageid="e57647b9-ed77-4ebe-a553-bbe469aa92ce" name="Queue Name" type="Data"><display x="-195" y="-15" w="150" h="30" /><font family="Tahoma" size="10" style="Bold" color="0000FF" /><datatype>text</datatype><initialvalue xml:space="preserve">Eduard_Haponov - Weather API</initialvalue><alwaysinit /></stage><stage stageid="ea6bd831-8851-4f12-94f2-db3db57d458c" name="Add To Queue" type="Action"><subsheetid>5181367c-e4f8-4a5f-ad0b-9c1dedb44de9</subsheetid><narrative>The Data collection contains the items to be added to the queue. The collection may contain single or multiple rows, with each representing an item to be added.

If there is a failure during the process, the queue will be unchanged - i.e. no rows will be loaded even if the error occurred on the last one.

If Defer Until is specified, the items will not be available to be worked until then. Otherwise, they are available immediately.

If the queue has a key field defined, an item added has key data longer than the maximum permitted 255 characters, an error will occur</narrative><display x="150" y="960" /><inputs><input type="text" name="Queue Name" friendlyname="Queue Name" narrative="The name of the queue to add items to" expr="[Queue Name]" /><input type="collection" name="Data" friendlyname="Data" narrative="A collection containing the data, one row for each item to be added" expr="[Quote Item]" /><input type="datetime" name="Defer Until" friendlyname="Defer Until" narrative="Optionally, the date/time the new item(s) should be deferred until" expr="" /><input type="number" name="Priority" friendlyname="Priority" narrative="Optionally, the priority for the new item(s). Lower numbers represent higher priorities. The default is 0." expr="" /><input type="text" name="Tags" friendlyname="Tags" narrative="Optionally, a semi-colon-separated set of tags to apply to the queue item(s)" expr="" /><input type="text" name="Status" friendlyname="Status" narrative="Optionally, the initial status required of the work queue item(s) " expr="" /><input type="number" name="Batch Size" friendlyname="Batch Size" narrative="Optionally, the batch size to use when adding many items to the queue.  A Value of 0 will process all items in one batch.  An empty field will use the default batch size of 1000." expr=""><validator type="BluePrism.AutomateProcessCore.RangeParameterValidation" parameter="0:25000" /></input></inputs><outputs><output type="collection" name="Item IDs" friendlyname="Item IDs" narrative="The IDs of the items which have been added to the queue, in the order of the collection of data passed that was input" stage="Item IDs" /></outputs><onsuccess>684ed3b8-27d6-47b9-9804-1bc38a864f9b</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Add To Queue" /></stage><stage stageid="1e9c0910-a398-4b19-bde3-bd9641245ab0" name="Populate City " type="SubSheet"><display x="15" y="-15" w="90" h="60" /><onsuccess>5759088a-f8b0-46f6-b9d8-b5e86f4b8854</onsuccess><processid>5181367c-e4f8-4a5f-ad0b-9c1dedb44de9</processid></stage><stage stageid="859bed11-2ead-40b0-9c78-ebcfe5a44323" name="Got Item?" type="Decision"><display x="15" y="135" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Item ID]&lt;&gt;&quot;&quot;" /><ontrue>994d0ec6-4ab8-4841-8fb9-35f9626a2a33</ontrue><onfalse>cb907aba-6fcc-4287-a8f5-8db5b77430ee</onfalse></stage><stage stageid="d1c68978-5e06-4fea-8095-86c7d57250ab" name="Reset Global Data" type="SubSheet"><display x="360" y="345" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>2bcf6299-79b9-44b6-b560-a3446c48e6a0</onsuccess><processid>deb1d248-85cc-4044-aa70-498cc7573461</processid></stage><stage stageid="2bcf6299-79b9-44b6-b560-a3446c48e6a0" name="Stop?" type="Decision"><display x="360" y="60" w="90" h="60" /><font family="Tahoma" size="10" style="Bold" color="FF0000" /><decision expression="[Stop After Items]=0 OR LocalTime()&gt;[Stop After Time] OR IsStopRequested()" /><ontrue>7a0e5aee-cf90-4fb6-b838-0c5a94f6189c</ontrue><onfalse>5759088a-f8b0-46f6-b9d8-b5e86f4b8854</onfalse></stage><stage stageid="5759088a-f8b0-46f6-b9d8-b5e86f4b8854" name="Get Next Item" type="Action"><narrative>This action gets the next item to be worked from the queue, returning its details and locking it so no other case can work it.

Items with higher priorities (lower numerical value) are processed first. Where the priority is the same, the next item is the one that has been in the queue the longest,  is not already locked, and is not already completed.

The Item ID returned is used to make further calls to update the work status for that item. It may be empty, in which case there are no items available. This can mean either a) the queue is empty, or b) the queue is not running. This mechanism can be used to cleanly stop all processes working a particular queue at the end of the next case. Items that have a 'deferred' time set will not be returned unless that time has been reached.</narrative><display x="15" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Queue Name" narrative="The name of the queue" expr="[Queue Name]" /><input type="text" name="Key Filter" narrative="Optionally, a key value to filter by. Only items with this key value will be considered." expr="" /><input type="text" name="Tag Filter" narrative="Optionally, a tag mask to filter by. This can consist of any number of tag searches - each term can be separated by a semi-colon and they are all applied to the search (ie. they are AND'ed terms not OR'ed terms). For example, &quot;Account: Joint; -Balance: Overdrawn; Card: *Visa*&quot; will include any items which match all the terms, ie. every item must have an 'Account: Joint' tag applied, no item can have a 'Balance: Overdrawn' tag applied, every item must have a tag applied which starts with 'Card: ' and then contains the text 'Visa'." expr="" /></inputs><outputs><output type="text" name="Item ID" narrative="The ID of the item retrieved - empty if there are none available." stage="Item ID" /><output type="collection" name="Data" narrative="The data associated with the item - a single collection row." stage="Item Data" /><output type="text" name="Status" narrative="The status of the item." stage="Item Status" /><output type="number" name="Attempts" narrative="The number of attempts already made to work this item." stage="Item Attempts" /></outputs><onsuccess>859bed11-2ead-40b0-9c78-ebcfe5a44323</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Get Next Item" /></stage><stage stageid="cb907aba-6fcc-4287-a8f5-8db5b77430ee" name="anchor1" type="Anchor"><display x="510" y="135" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>7a0e5aee-cf90-4fb6-b838-0c5a94f6189c</onsuccess></stage><stage stageid="a0b07757-c91f-4180-8417-27c28cf6964c" name="Stop After Time" type="Data"><narrative>Used by the process to decide whether to keep working or close itself down. This value can be modified from Control Room to bring a session to an early finish.</narrative><display x="-390" y="105" w="150" h="30" /><font family="Tahoma" size="10" style="Bold" color="FF0000" /><datatype>time</datatype><initialvalue>18:30:00</initialvalue><private /><alwaysinit /></stage><stage stageid="4de527a5-55c3-4579-8647-a0d891a82e2b" name="Stop After Items" type="Data"><narrative>Used by the process to decide whether to keep working or close itself down. This value can be modified from Control Room to bring a session to an early finish.</narrative><display x="-390" y="135" w="150" h="30" /><font family="Tahoma" size="10" style="Bold" color="FF0000" /><datatype>number</datatype><initialvalue>50</initialvalue><private /><alwaysinit /></stage><stage stageid="0827633f-5924-4cfa-b69a-c2c51aab8f9c" name="Stopping Control Settings" type="Block"><display x="-480" y="75" w="180" h="90" /><font family="Tahoma" size="10" style="Regular" color="FF0000" /></stage><stage stageid="a14af066-d55b-42a1-966a-a22ad6cc7586" name="Item ID" type="Data"><display x="-195" y="285" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="14020d73-8e72-4e01-af66-3514d1b0b28d" name="Item Status" type="Data"><display x="-195" y="315" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="1f151ac3-07a7-4c07-a206-5046fe235ee2" name="Item Attempts" type="Data"><display x="-195" y="345" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><alwaysinit /></stage><stage stageid="3845c22b-9ec2-4e61-a82c-0dce2b6d0352" name="Item Data" type="Collection"><display x="-195" y="240" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><alwaysinit /><collectioninfo><singlerow /><field name="City" type="text" /><field name="City ID" type="text" /><field name="File Name" type="text" /><field name="Units" type="text" /></collectioninfo><initialvalue><singlerow /><row><field name="City" type="text" value="" /><field name="City ID" type="text" value="" /><field name="File Name" type="text" value="" /><field name="Units" type="text" value="" /></row></initialvalue></stage><stage stageid="826c8c5d-b64c-492e-ab2c-c92f72679783" name="Item Data" type="Block"><display x="-285" y="195" w="180" h="180" /><font family="Tahoma" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="004c7ca2-7512-43aa-9a1e-fd4b4977ccd0" name="Mark Item As Exception" type="SubSheet"><display x="195" y="600" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>9aed0d12-1ffa-4716-ac61-a0b58e411921</onsuccess><processid>c39900d6-14c3-44e8-a3ac-6a18a4dc13f4</processid></stage><stage stageid="716e7b98-63b9-479c-86ce-d769ae9ff5cc" name="Mark Item As Completed" type="SubSheet"><display x="180" y="345" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>d1c68978-5e06-4fea-8095-86c7d57250ab</onsuccess><processid>1570a751-b626-4fe5-bae6-4a7e9fde61f3</processid></stage><stage stageid="34c010da-dfc1-476d-8af5-e8d1367fb7fe" name="Resume" type="Resume"><display x="15" y="600" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>004c7ca2-7512-43aa-9a1e-fd4b4977ccd0</onsuccess></stage><stage stageid="38a3dcb6-a0be-4c80-9658-bda24965779a" name="Main Global Collection" type="Collection"><display x="-390" y="225" w="150" h="60" /><datatype>collection</datatype><alwaysinit /></stage><stage stageid="12e85239-f5db-494b-84f0-df93c295ecb6" name="Global" type="Block"><display x="-480" y="180" w="180" h="90" /><font family="Segoe UI" size="10" style="Regular" color="00FF00" /></stage><stage stageid="3cdf988e-82cd-4e07-a6ad-8cb7a887f99e" name="Eduard_Haponov - Weather API - Output Folder Path" type="Data"><display x="-390" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">E:\Documents\BluePrism\Weather API\ErrorMessage.txt</initialvalue><exposure>Environment</exposure><alwaysinit /></stage><stage stageid="933ee76b-2dfd-49bf-9935-86e9daa0f5f5" name="Mark Item As Exception" type="SubSheetInfo"><subsheetid>c39900d6-14c3-44e8-a3ac-6a18a4dc13f4</subsheetid><narrative>Marks the current work queue item as an exception</narrative><display x="-120" y="-225" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="e116fb62-ce40-46f0-8d62-b67b6a02438d" name="Start" type="Start"><subsheetid>c39900d6-14c3-44e8-a3ac-6a18a4dc13f4</subsheetid><display x="15" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>283c8c0f-67e7-46fd-93d0-787fa7621717</onsuccess></stage><stage stageid="003da158-8c81-4fae-bbbd-6f5fe52dcad9" name="Retry Exception?" type="Decision"><subsheetid>c39900d6-14c3-44e8-a3ac-6a18a4dc13f4</subsheetid><display x="15" y="30" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="Lower([Exception Type])=&quot;system exception&quot; OR Lower([Exception Type])=&quot;internal&quot;" /><ontrue>3a6adcb3-43ec-4fab-b478-747a98f06314</ontrue><onfalse>95f07dbe-44e0-4643-b2c9-09df8b83f9df</onfalse></stage><stage stageid="092fd784-d957-43e5-8cd5-8a6303db0397" name="Previous Exception?" type="Decision"><subsheetid>c39900d6-14c3-44e8-a3ac-6a18a4dc13f4</subsheetid><display x="15" y="225" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Previous Exception Detail]=[Exception Detail]" /><ontrue>1a5fcd4b-1b1c-48b6-a37b-8c08623fe643</ontrue><onfalse>a2501cad-9634-4ab0-9581-1f144db1440e</onfalse></stage><stage stageid="59ab551d-1069-4018-b8e4-fc26c0dfa69f" name="Previous Exception Detail" type="Data"><subsheetid>c39900d6-14c3-44e8-a3ac-6a18a4dc13f4</subsheetid><display x="-150" y="165" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /></stage><stage stageid="1a5fcd4b-1b1c-48b6-a37b-8c08623fe643" name="Count" type="Calculation"><subsheetid>c39900d6-14c3-44e8-a3ac-6a18a4dc13f4</subsheetid><display x="15" y="300" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>026e2572-6541-40e0-b012-36f37efa6b7e</onsuccess><calculation expression="1+ [Consecutive Exception Count]" stage="Consecutive Exception Count" /></stage><stage stageid="5b844d3a-3c47-4685-9972-510f6db594fa" name="Consecutive Exception Count" type="Data"><subsheetid>c39900d6-14c3-44e8-a3ac-6a18a4dc13f4</subsheetid><display x="-150" y="210" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue></stage><stage stageid="026e2572-6541-40e0-b012-36f37efa6b7e" name="Limit?" type="Decision"><subsheetid>c39900d6-14c3-44e8-a3ac-6a18a4dc13f4</subsheetid><display x="15" y="375" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Consecutive Exception Count]&gt;=[Consecutive Exception Limit]" /><ontrue>a9cf494b-ca2d-4dc3-b77a-ff464fc2bf92</ontrue><onfalse>92bce852-9e75-4048-909b-c848e4a3b58d</onfalse></stage><stage stageid="a78b7461-a3aa-4805-a4e9-54ecabc85155" name="TERMINATE" type="Exception"><subsheetid>c39900d6-14c3-44e8-a3ac-6a18a4dc13f4</subsheetid><display x="15" y="570" w="120" h="60" /><font family="Tahoma" size="10" style="Bold" color="FF0000" /><exception type="" detail="[Consecutive Exception Limit] &amp; &quot; consecutive incidents of &quot; &amp; [Exception Type] &amp; &quot;: &quot; &amp; [Exception Detail]" /></stage><stage stageid="3685a369-143d-4a1a-96ea-7c2ae3ff82c2" name="Consecutive Exception Limit" type="Data"><subsheetid>c39900d6-14c3-44e8-a3ac-6a18a4dc13f4</subsheetid><display x="-150" y="255" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>3</initialvalue><private /><alwaysinit /></stage><stage stageid="029a9e9a-c654-4322-8865-8de13bce8e39" name="End2" type="End"><subsheetid>c39900d6-14c3-44e8-a3ac-6a18a4dc13f4</subsheetid><display x="285" y="375" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="c226376d-a3db-40a4-b846-dd33ab9399be" name="Reset Consecutive Exception Indicators" type="MultipleCalculation"><subsheetid>c39900d6-14c3-44e8-a3ac-6a18a4dc13f4</subsheetid><display x="285" y="225" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>029a9e9a-c654-4322-8865-8de13bce8e39</onsuccess><steps><calculation expression="[Exception Detail]" stage="Previous Exception Detail" /><calculation expression="0" stage="Consecutive Exception Count" /></steps></stage><stage stageid="a9cf494b-ca2d-4dc3-b77a-ff464fc2bf92" name="Stop the process because consecutive exceptions are occuring" type="Note"><subsheetid>c39900d6-14c3-44e8-a3ac-6a18a4dc13f4</subsheetid><narrative>The consecutive exception limit has been reached, so throw a new exception to terminate the process.</narrative><display x="15" y="480" w="120" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>a78b7461-a3aa-4805-a4e9-54ecabc85155</onsuccess></stage><stage stageid="d0fd8b30-10fb-49d1-a258-595827a33231" name="New Item ID" type="Data"><subsheetid>c39900d6-14c3-44e8-a3ac-6a18a4dc13f4</subsheetid><display x="-150" y="120" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="95f07dbe-44e0-4643-b2c9-09df8b83f9df" name="Set Tag Business Exception" type="Action"><subsheetid>c39900d6-14c3-44e8-a3ac-6a18a4dc13f4</subsheetid><narrative>Adds a tag to a work queue item</narrative><display x="135" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Item ID" narrative="The ID of the queue item to add the tag to" expr="[Item ID]" /><input type="text" name="Tag" narrative="The tag to add to the item. Note that this cannot start with a '+' (plus) or '-' (minus) character, and cannot contain ';' (semi-colon) characters" expr="&quot;Business Exception&quot;" /></inputs><onsuccess>0a7b48ff-63b4-4cd3-80a6-f089ae5ea2f9</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Tag Item" /></stage><stage stageid="e1a085e5-a834-4f0f-8f24-401555df89f2" name="Reset Consecutive Exception Indicators" type="MultipleCalculation"><subsheetid>c39900d6-14c3-44e8-a3ac-6a18a4dc13f4</subsheetid><display x="510" y="30" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>94486b15-8e67-45c1-aaa6-d84052798a9d</onsuccess><steps><calculation expression="&quot;&quot;" stage="Previous Exception Detail" /><calculation expression="0" stage="Consecutive Exception Count" /></steps></stage><stage stageid="a2501cad-9634-4ab0-9581-1f144db1440e" name="Note5" type="Note"><subsheetid>c39900d6-14c3-44e8-a3ac-6a18a4dc13f4</subsheetid><narrative>This exception is different from the previous one.</narrative><display x="150" y="225" w="120" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>c226376d-a3db-40a4-b846-dd33ab9399be</onsuccess></stage><stage stageid="92bce852-9e75-4048-909b-c848e4a3b58d" name="Note5" type="Note"><subsheetid>c39900d6-14c3-44e8-a3ac-6a18a4dc13f4</subsheetid><narrative>This exception is the same as the previous one but the consecutive exception limit has not yet been reached.</narrative><display x="150" y="375" w="120" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>029a9e9a-c654-4322-8865-8de13bce8e39</onsuccess></stage><stage stageid="0a7b48ff-63b4-4cd3-80a6-f089ae5ea2f9" name="Note5" type="Note"><subsheetid>c39900d6-14c3-44e8-a3ac-6a18a4dc13f4</subsheetid><narrative>Don't retry this type of exception, just mark the queue item and carry on.</narrative><display x="255" y="30" w="120" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>78d063a4-023e-428b-9696-f324cd210c7e</onsuccess></stage><stage stageid="e83fe620-b9c8-4512-9e75-4c8865820e75" name="Mark Exception" type="Action"><subsheetid>c39900d6-14c3-44e8-a3ac-6a18a4dc13f4</subsheetid><narrative>Marks the item as an exception, optionally retrying it by cloning the item and returning the ID of the clone. The item must be 'owned' by the calling process - i.e. it must have been retrieved using Get Next Item.</narrative><display x="15" y="150" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Item ID" narrative="The ID of the item to mark" expr="[Item ID]" /><input type="text" name="Exception Reason" narrative="A description of the reason for the exception" expr="[Exception Detail]" /><input type="flag" name="Retry" narrative="Whether or not to retry the item, up to the maximum number of attempts specified for the queue. Optional - if not specified, the item will be retried" expr="True" /><input type="flag" name="Keep Locked" narrative="Whether or not the clone of the item should remain locked after the exception has been registered and the item is retried. Optional - default is False" expr="False" /></inputs><outputs><output type="text" name="New Item ID" narrative="The Item ID of the newly cloned item. This item will be locked if 'Keep Locked' is True. This will be empty if no item was cloned (ie. the item was not retried." stage="New Item ID" /></outputs><onsuccess>092fd784-d957-43e5-8cd5-8a6303db0397</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Mark Exception" /></stage><stage stageid="78d063a4-023e-428b-9696-f324cd210c7e" name="Mark Exception" type="Action"><subsheetid>c39900d6-14c3-44e8-a3ac-6a18a4dc13f4</subsheetid><narrative>Marks the item as an exception, optionally retrying it by cloning the item and returning the ID of the clone. The item must be 'owned' by the calling process - i.e. it must have been retrieved using Get Next Item.</narrative><display x="390" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Item ID" narrative="The ID of the item to mark" expr="[Item ID]" /><input type="text" name="Exception Reason" narrative="A description of the reason for the exception" expr="[Exception Detail]" /><input type="flag" name="Retry" narrative="Whether or not to retry the item, up to the maximum number of attempts specified for the queue. Optional - if not specified, the item will be retried" expr="False" /><input type="flag" name="Keep Locked" narrative="Whether or not the clone of the item should remain locked after the exception has been registered and the item is retried. Optional - default is False" expr="False" /></inputs><outputs><output type="text" name="New Item ID" narrative="The Item ID of the newly cloned item. This item will be locked if 'Keep Locked' is True. This will be empty if no item was cloned (ie. the item was not retried." stage="New Item ID" /></outputs><onsuccess>e1a085e5-a834-4f0f-8f24-401555df89f2</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Mark Exception" /></stage><stage stageid="94486b15-8e67-45c1-aaa6-d84052798a9d" name="End1" type="End"><subsheetid>c39900d6-14c3-44e8-a3ac-6a18a4dc13f4</subsheetid><display x="645" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="283c8c0f-67e7-46fd-93d0-787fa7621717" name="System Unavailable?" type="Decision"><subsheetid>c39900d6-14c3-44e8-a3ac-6a18a4dc13f4</subsheetid><display x="15" y="-60" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="Lower([Exception Type])=&quot;system unavailable exception&quot; OR Lower([Exception Type])=&quot;login system exception&quot;" /><ontrue>0cab9624-8632-4f9d-b57b-baa53c03fb38</ontrue><onfalse>003da158-8c81-4fae-bbbd-6f5fe52dcad9</onfalse></stage><stage stageid="0cab9624-8632-4f9d-b57b-baa53c03fb38" name="Release Item" type="Action"><subsheetid>c39900d6-14c3-44e8-a3ac-6a18a4dc13f4</subsheetid><narrative>Unlocks a currently locked work queue item</narrative><display x="-120" y="-60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Item ID" narrative="The ID of the work queue item which should be unlocked" expr="[Item ID]" /></inputs><outputs><output type="flag" name="Unlocked" narrative="Whether the item was unlocked as a result of this action or not. If the item had finished being worked elsewhere before this action had run, this will be 'False'" stage="" /></outputs><onsuccess>3e6515a5-a9b3-4658-b8ba-ae1d88ef3e0a</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Unlock Item" /></stage><stage stageid="3e6515a5-a9b3-4658-b8ba-ae1d88ef3e0a" name="TERMINATE" type="Exception"><subsheetid>c39900d6-14c3-44e8-a3ac-6a18a4dc13f4</subsheetid><display x="-120" y="30" w="120" h="60" /><font family="Tahoma" size="10" style="Bold" color="FF0000" /><exception type="" detail="[Consecutive Exception Limit] &amp; &quot; consecutive incidents of &quot; &amp; [Exception Type] &amp; &quot;: &quot; &amp; [Exception Detail]" /></stage><stage stageid="f50f2ba8-c51f-40ef-8c10-4eca8dd22835" name="Note4" type="Note"><subsheetid>c39900d6-14c3-44e8-a3ac-6a18a4dc13f4</subsheetid><narrative>System not working or cannot log in</narrative><display x="-120" y="-120" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>283c8c0f-67e7-46fd-93d0-787fa7621717</onsuccess></stage><stage stageid="ba62dc4b-15d3-4c8a-9ee3-a530eec436e4" name="Note4" type="Note"><subsheetid>c39900d6-14c3-44e8-a3ac-6a18a4dc13f4</subsheetid><narrative>Check for concurrent exceptions, a system change may have occured</narrative><display x="150" y="135" w="120" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>092fd784-d957-43e5-8cd5-8a6303db0397</onsuccess></stage><stage stageid="3a6adcb3-43ec-4fab-b478-747a98f06314" name="Set Tag System Exception" type="Action"><subsheetid>c39900d6-14c3-44e8-a3ac-6a18a4dc13f4</subsheetid><narrative>Adds a tag to a work queue item</narrative><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Item ID" narrative="The ID of the queue item to add the tag to" expr="[Item ID]" /><input type="text" name="Tag" narrative="The tag to add to the item. Note that this cannot start with a '+' (plus) or '-' (minus) character, and cannot contain ';' (semi-colon) characters" expr="&quot;System Exception&quot;" /></inputs><onsuccess>e83fe620-b9c8-4512-9e75-4c8865820e75</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Tag Item" /></stage><stage stageid="ff05d048-2513-47fe-b734-6b6a3f564a3b" name="Note9" type="Note"><subsheetid>c39900d6-14c3-44e8-a3ac-6a18a4dc13f4</subsheetid><narrative>We could send an alert here to the process controller team</narrative><display x="-240" y="30" w="120" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="a5d2ce43-7b8e-4ede-8691-7dc18399fee1" name="Note9" type="Note"><subsheetid>c39900d6-14c3-44e8-a3ac-6a18a4dc13f4</subsheetid><narrative>We could send an alert here to the process controller team</narrative><display x="-105" y="570" w="120" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="46e51343-4978-496c-8ee2-2ff42612d283" name="Block4" type="Block"><subsheetid>c39900d6-14c3-44e8-a3ac-6a18a4dc13f4</subsheetid><display x="360" y="435" w="0" h="0" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="a99b711e-f9bb-4127-be90-cbf54d5e53ce" name="Mark Item As Completed" type="SubSheetInfo"><subsheetid>1570a751-b626-4fe5-bae6-4a7e9fde61f3</subsheetid><narrative>Marks the current work queue item as complete</narrative><display x="-135" y="-195" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="4b6d9d5d-cf94-4c05-94ca-932ca367d556" name="Start" type="Start"><subsheetid>1570a751-b626-4fe5-bae6-4a7e9fde61f3</subsheetid><display x="15" y="-165" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>71f1d48a-e039-417e-b866-6eb334d88332</onsuccess></stage><stage stageid="8dd6f323-b1a3-4f6e-9d71-a24f7066b7c1" name="Mark Completed" type="Action"><subsheetid>1570a751-b626-4fe5-bae6-4a7e9fde61f3</subsheetid><narrative>Marks the item as completed, by updating the Completed timestamp and setting Locked to null. The item must be 'owned' by the calling process - i.e. it must have been retrieved using Get Next Item.</narrative><display x="15" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Item ID" narrative="The ID of the item to mark" expr="[Item ID]" /></inputs><onsuccess>f1a39722-a84d-4be1-8d0f-1e1938b2db33</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Mark Completed" /></stage><stage stageid="f1a39722-a84d-4be1-8d0f-1e1938b2db33" name="Reset Consecutive Exception Indicators" type="MultipleCalculation"><subsheetid>1570a751-b626-4fe5-bae6-4a7e9fde61f3</subsheetid><display x="15" y="0" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>9252f941-7320-4928-a04b-307062d62d11</onsuccess><steps><calculation expression="&quot;&quot;" stage="Previous Exception Detail" /><calculation expression="0" stage="Consecutive Exception Count" /></steps></stage><stage stageid="9252f941-7320-4928-a04b-307062d62d11" name="End3" type="End"><subsheetid>1570a751-b626-4fe5-bae6-4a7e9fde61f3</subsheetid><display x="15" y="75" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="71f1d48a-e039-417e-b866-6eb334d88332" name="Set Tag" type="Action"><subsheetid>1570a751-b626-4fe5-bae6-4a7e9fde61f3</subsheetid><narrative>Adds a tag to a work queue item</narrative><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Item ID" narrative="The ID of the queue item to add the tag to" expr="[Item ID]" /><input type="text" name="Tag" narrative="The tag to add to the item. Note that this cannot start with a '+' (plus) or '-' (minus) character, and cannot contain ';' (semi-colon) characters" expr="&quot;Completed&quot;" /></inputs><onsuccess>8dd6f323-b1a3-4f6e-9d71-a24f7066b7c1</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Tag Item" /></stage><stage stageid="8715892a-649f-4a73-ba7a-3c1ae9164c5c" name="Main Code Block" type="Block"><subsheetid>1570a751-b626-4fe5-bae6-4a7e9fde61f3</subsheetid><display x="-45" y="-135" w="120" h="180" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="7a0e5aee-cf90-4fb6-b838-0c5a94f6189c" name="03 - Write to Excel" type="SubSheet"><display x="510" y="60" w="90" h="60" /><inputs><input type="collection" name="Result" friendlyname="Result" expr="[Main Global Collection]" /><input type="text" name="File Name" friendlyname="File Name" expr="[File Name]" /></inputs><onsuccess>90608fdb-d6f5-4952-b981-e4a123481d44</onsuccess><processid>525ccf90-1c11-4163-ab93-de13ae2d5e24</processid></stage><stage stageid="90608fdb-d6f5-4952-b981-e4a123481d44" name="End10" type="End"><display x="660" y="60" /></stage><stage stageid="5a35ccf6-f4bd-48ce-b643-4e291db94909" name="Remove Empty Rows" type="Action"><subsheetid>525ccf90-1c11-4163-ab93-de13ae2d5e24</subsheetid><display x="15" y="-225" /><inputs><input type="collection" name="Collection In" friendlyname="Collection In" narrative="The collection to remove empty rows from" expr="[Result]" /></inputs><outputs><output type="collection" name="Collection Out" friendlyname="Collection Out" narrative="The collection with the empty rows removed" stage="Result" /></outputs><onsuccess>a3fdbea0-b96e-402e-896e-d6e116808cfd</onsuccess><resource object="Utility - Collection Manipulation" action="Remove Empty Rows" /></stage><stage stageid="a3fdbea0-b96e-402e-896e-d6e116808cfd" name="Count Rows" type="Action"><subsheetid>525ccf90-1c11-4163-ab93-de13ae2d5e24</subsheetid><display x="15" y="-165" /><inputs><input type="text" name="Collection Name" friendlyname="Collection Name" narrative="The name of the collection to act upon" expr="&quot;Result&quot;" /></inputs><outputs><output type="number" name="Count" friendlyname="Count" narrative="The number of rows counted in the collection" stage="Count Rows" /></outputs><onsuccess>76bac944-43d2-4101-82e8-19666776ff6f</onsuccess><resource object="Blueprism.AutomateProcessCore.clsCollectionActions" action="Count Rows" /></stage><stage stageid="5e52a04b-ddad-4efd-a04c-29276013831d" name="Count Rows" type="Data"><subsheetid>525ccf90-1c11-4163-ab93-de13ae2d5e24</subsheetid><display x="-195" y="75" w="120" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="76bac944-43d2-4101-82e8-19666776ff6f" name="Empty Collection?" type="Decision"><subsheetid>525ccf90-1c11-4163-ab93-de13ae2d5e24</subsheetid><display x="15" y="-105" /><decision expression="[Count Rows] = 0" /><ontrue>c175df63-7aa7-4cf2-8210-fa46c6fbf4d1</ontrue><onfalse>81f28ac0-a5f9-4555-b437-83b0a3265a72</onfalse></stage><stage stageid="c175df63-7aa7-4cf2-8210-fa46c6fbf4d1" name="End4" type="End"><subsheetid>525ccf90-1c11-4163-ab93-de13ae2d5e24</subsheetid><display x="195" y="-105" /></stage><stage stageid="08c420a8-220e-4996-9f59-a8fe84b66215" name="Append Rows to Collection" type="Action"><subsheetid>ed39eccf-5062-43d2-8f56-1a09243be45b</subsheetid><display x="15" y="240" /><inputs><input type="collection" name="Main Collection" friendlyname="Main Collection" narrative="The collection to append to." expr="[Main Global Collection]" /><input type="collection" name="Collection to Append" friendlyname="Collection to Append" narrative="The collection to append." expr="[Result]" /></inputs><outputs><output type="collection" name="Combined Collection" friendlyname="Combined Collection" narrative="The combined collection." stage="Main Global Collection" /></outputs><onsuccess>c981c3ee-2f2e-4662-baff-20f85060a451</onsuccess><resource object="Utility - Collection Manipulation" action="Append Rows to Collection" /></stage><stage stageid="a219837e-918f-4bc2-afd8-abfa257b3c60" name="Recover3" type="Recover"><subsheetid>525ccf90-1c11-4163-ab93-de13ae2d5e24</subsheetid><display x="105" y="135" /><onsuccess>0a21120b-5a61-47cb-9e82-fa6a0c2d51ad</onsuccess></stage><stage stageid="caeae808-5a29-467f-ba3c-bc91a557fcaf" name="Save File Name" type="Calculation"><subsheetid>ed39eccf-5062-43d2-8f56-1a09243be45b</subsheetid><display x="15" y="180" /><onsuccess>08c420a8-220e-4996-9f59-a8fe84b66215</onsuccess><calculation expression="[Item Data.File Name]" stage="File Name" /></stage><stage stageid="61f019ff-9505-41ac-b959-f40334d3cc0b" name="File Name" type="Data"><subsheetid>ed39eccf-5062-43d2-8f56-1a09243be45b</subsheetid><display x="-195" y="315" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="82691cc0-e9ad-4aef-b7f4-d1d116ca12f0" name="File Name" type="Data"><subsheetid>525ccf90-1c11-4163-ab93-de13ae2d5e24</subsheetid><display x="-195" y="-90" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2906ba47-f8bd-48a0-82f9-c8527a52ef10" name="File Name" type="Data"><display x="-195" y="150" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage></process></process>
        <object id="d39ef435-da5c-4e38-a846-b903b2cf3d8e" name="Utility - JSON" xmlns="http://www.blueprism.co.uk/product/process"><process name="Utility - JSON" version="6.9.0.26970" bpversion="7.2.1.7446" narrative="An object for parsing JSON into a collection and turning a collection into JSON." byrefcollection="true" processrunningmessage="" disableversioning="false" type="object" runmode="Background"><appdef><element name="Application Root"><id>8f20ac0c-296f-43c3-b0d9-59b5b2b7da1c</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="6a9ccb5a-8cc3-44ac-b343-39680558062f" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="560472b9-cea4-41d5-bc36-c49d6c1b26e6" type="Normal" published="True"><name>Collection to JSON</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e5aeb4cb-cd25-4535-b3be-b46681b4e6b6" type="Normal" published="True"><name>JSON to Collection</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e53062c7-68de-4763-b37a-456688d0d607" type="Normal" published="True"><name>JSON to Collection (skipping JArray)</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="1c04dc1d-81e9-47e9-a8c4-b46dd19b2624" type="Normal" published="True"><name>JsonPath</name><view><camerax>0</camerax><cameray>-9</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="cbbe7eb7-53d6-49a6-9f88-cb3a26c334df" type="Normal" published="True"><name>JsonPath - Return Collection</name><view><camerax>0</camerax><cameray>42</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="222ee4c2-914e-4b2b-8e13-443c1c76b3dd" name="Start" type="Start"><loginhibit /><display x="15" y="-105" /><onsuccess>ff6524a3-da73-439c-a4ba-2aabb994009c</onsuccess></stage><stage stageid="ff6524a3-da73-439c-a4ba-2aabb994009c" name="End" type="End"><loginhibit /><display x="15" y="90" /></stage><stage stageid="7fd071f3-6769-4dd5-95cf-a911c73c42ff" name="Stage1" type="ProcessInfo"><display x="-180" y="-105" w="180" h="90" /><references><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference><reference>Newtonsoft.Json.dll</reference><reference>System.Core.dll</reference><reference>System.dll</reference></references><imports><import>System.Data</import><import>System.Drawing</import><import>Newtonsoft.Json</import><import>System.Collections.Generic</import><import>System.Text</import><import>System.IO</import><import>System</import><import>Newtonsoft.Json.Linq</import><import>System.Collections</import><import>System.Linq</import><import>System.Collections</import></imports><language>csharp</language><globalcode><![CDATA[]]></globalcode><code><![CDATA[//**********************************************************************************************
// NEW CODE
// This code is used by the 'JSON To Collection (Skipping Array)' action. It is based on 
// opensource code developed by Tobias Arnold and released under MIT License. The original 
// source code can be found at the following GitHub link: 
// 
// 		https://github.com/toarnold/Coremoran.BluePrism.Json. 
//
// To contact Tobias, please refer to his LinkedIn profile: 
// 
// 		https://www.linkedin.com/in/tobias-arnold-492368155/  
//**********************************************************************************************
static bool IsSingleRowNew(DataTable table)
{
	return Convert.ToBoolean(table.ExtendedProperties[SpecialValues.SingleRowPropertyName] ?? false);
}

static void SetSingleRow(DataTable table, bool singleRow)
{
	table.ExtendedProperties[SpecialValues.SingleRowPropertyName] = singleRow;
}

public static class BluePrismConverter
{
	public static DataTable ObjectToCollection(object o)
	{
		return JsonToCollection(JsonConvert.SerializeObject(o,
				new DataTableConverter(),
				new GroupingConverter(),
				new DataRowConverter()
		));
	}

	public static DataTable JsonToCollection(string json)
	{
		return (DataTable)JsonConvert.DeserializeObject(json, typeof(DataTable), new JsonSerializerSettings
		{
			Converters = new JsonConverter[]
			{
				new DataTableConverter(),
				new DataRowConverter()
			},
			DateTimeZoneHandling = DateTimeZoneHandling.Unspecified
		});
	}

	public static string CollectionToJson(DataTable table)
	{
		return JsonConvert.SerializeObject(table,
				new DataTableConverter(),
				new DataRowConverter());
	}

	public static JArray CollectionToJArray(DataTable table)
	{
		var serializer = JsonSerializer.Create(new JsonSerializerSettings()
		{
			Converters = new JsonConverter[] {
				new DataTableConverter(),
				new DataRowConverter() }
		});
		return JArray.FromObject(table, serializer);
	}
}

internal class DataRowConverter : JsonConverter
{
	public override bool CanConvert(Type objectType) => objectType == typeof(DataRow);

	public override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer)
	{
		if (reader.TokenType != JsonToken.StartObject)
		{
			throw new Exception("Unsupported JsonToken " + reader.TokenType.ToString());
		}

		var dt = new DataTable();
		SetSingleRow(dt, true);
		dt.Rows.Add();
		string currentColumnName = null;
		while (reader.Read() && reader.TokenType != JsonToken.EndObject)
		{
			switch (reader.TokenType)
			{
				case JsonToken.PropertyName:
					currentColumnName = reader.Value.ToString();
					break;
				default:
					DataTableRowHandler.HandleJsonData(dt, currentColumnName, serializer, reader);
					break;
			}
		}
		return dt.Rows[0];
	}

	public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer)
	{
		var dataRow = (DataRow)value;
		var dataTable = dataRow.Table;
		if (dataTable.Columns.Count == 1
			&& dataTable.Columns[0].ColumnName == SpecialValues.JsonUnnamedValue 
			&& (!IsSingleRowNew(dataTable) || writer.Path == string.Empty))
		{
			// First (and single!) element
			serializer.Serialize(writer, dataRow[0]); 
		}
		else
		{
			serializer.Serialize(writer, dataTable.Columns.Cast<DataColumn>().ToDictionary(k => k.ColumnName, v => dataRow[v]));
		}
	}
}

internal class DataTableConverter : JsonConverter
{
	public override bool CanConvert(Type objectType) => objectType == typeof(DataTable);

	public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer)
	{
		var dt = (DataTable)value;
		if (IsSingleRowNew(dt))
		{
			serializer.Serialize(writer, dt.Rows[0]);
		}
		else
		{
			serializer.Serialize(writer, dt.Select());
		}
	}

	public override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer)
	{
		var dt = new DataTable();
		switch (reader.TokenType)
		{
			case JsonToken.StartObject:
				dt = serializer.Deserialize<DataRow>(reader).Table;
				break;
			case JsonToken.StartArray:
				SetSingleRow(dt, false);
				var nullColumns = new HashSet<string>();
				while (reader.Read() && reader.TokenType != JsonToken.EndArray)
				{
					switch (reader.TokenType)
					{
						case JsonToken.Null:
							dt.Rows.Add();
							break;
						case JsonToken.StartObject:
							var tempTable = serializer.Deserialize<DataRow>(reader).Table;
							var nulls = tempTable.Columns.Cast<DataColumn>().Where(w => tempTable.Rows[0].IsNull(w.ColumnName)).Select(s => s.ColumnName).ToList();
							nulls.ForEach(n => tempTable.Columns.Remove(n));
							nullColumns.UnionWith(nulls);
							dt.Merge(tempTable, true, MissingSchemaAction.Add);
							break;
						default:
							DataTableRowHandler.HandleJsonData(dt, null, serializer, reader);
							break;
					}
				}
				// Add not set Null-Columns
				dt.Columns.AddRange(nullColumns.Where(w => !dt.Columns.Contains(w)).Select(s => new DataColumn(s)).ToArray());
				break;
			default: /* Try to append a single value */
				if (reader.TokenType != JsonToken.Null)
				{
					SetSingleRow(dt, true);
					dt.Rows.Add();
					DataTableRowHandler.HandleJsonData(dt, null, serializer, reader);
				}
				break;
		}
		return dt;
	}
}

internal static class DataTableRowHandler
{
	private static void AppendArrayItem(DataTable table, Type colType, string colName, object value)
	{
		if (!table.Columns.Contains(colName))
		{
			var newcolumn = new DataColumn(colName, colType); 
			if (colType == typeof(DateTime))
			{
				newcolumn.DateTimeMode = DataSetDateTime.Utc;
			}
			table.Columns.Add(newcolumn);
		}
		if (IsSingleRowNew(table))
		{
			table.Rows[0][colName] = value;
		}
		else
		{
			var newRow = table.NewRow();
			newRow[colName] = value;
			table.Rows.Add(newRow);
		}
	}

	internal static void HandleJsonData(DataTable table, string currentColumnName, JsonSerializer serializer, JsonReader reader)
	{
		switch (reader.TokenType)
		{
			case JsonToken.String:
			case JsonToken.Null:
				AppendArrayItem(table, typeof(string), currentColumnName ?? SpecialValues.JsonUnnamedValue, reader.Value);
				break;
			case JsonToken.Integer:
			case JsonToken.Float:
				AppendArrayItem(table, typeof(decimal), currentColumnName ?? SpecialValues.JsonUnnamedValue, reader.Value);
				break;
			case JsonToken.Boolean:
				AppendArrayItem(table, typeof(bool), currentColumnName ?? SpecialValues.JsonUnnamedValue, reader.Value);
				break;
			case JsonToken.Date:
				AppendArrayItem(table, typeof(DateTime), currentColumnName ?? SpecialValues.JsonUnnamedValue, reader.Value);
				break;
			case JsonToken.StartObject:
				AppendArrayItem(table, typeof(DataTable), currentColumnName ?? SpecialValues.JsonUnnamedValue, serializer.Deserialize<DataTable>(reader));
				break;
			case JsonToken.StartArray:
				AppendArrayItem(table, typeof(DataTable), currentColumnName ?? SpecialValues.JsonUnnamedValue, serializer.Deserialize<DataTable>(reader));
				break;
			default:
				throw new Exception("Unsupported JsonToken " + reader.TokenType.ToString());
		}
	}
}

internal class GroupingConverter : JsonConverter
{
	public override bool CanRead => false;

	public override bool CanConvert(Type objectType) => objectType.GetInterfaces().Any(a => a.IsGenericType && a.GetGenericTypeDefinition() == typeof(IGrouping<,>));

	public override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer) => throw new NotImplementedException();

	public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer)
	{
		// Get key object with reflection
		var keyInfo = value.GetType().GetProperty("Key");
		var key = JToken.FromObject(keyInfo.GetValue(value));

		var data = key is JObject obj ? obj : new JObject { { SpecialValues.GroupingSingleKeyColumnName, key } };
		data.Add(SpecialValues.GroupingGroupColumnName, JArray.FromObject(((IEnumerable<object>)value).Select(x => x), serializer));

		serializer.Serialize(writer, data);
	}
}

public class SpecialValues
{
	public const string JsonUnnamedValue = "JSON_Unnamed_Value";
	public const string SingleRowPropertyName = "SingleRow";
	public const string GroupingSingleKeyColumnName = "Key";
	public const string GroupingGroupColumnName = "Group";
}

//**********************************************************************************************
// LEGACY CODE
// This is the original code of the Utility - JSON VBO. This code is used by the 
// 'JSON To Collection' and 'Collection To JSON' actions.
//**********************************************************************************************
private bool mUseNewParseMethod = false;

private class JSON
{
	public const string Array = "JSON:Array";
	public const string Null = "JSON:Null";
}

public string ConvertToJSON(DataTable dt)
{
	object o = SerialiseGeneric(dt, true);
	return JsonConvert.SerializeObject(o);
}

public object SerialiseGeneric(object o, bool removeArray)
{
	DataTable dt = o as DataTable;
	if (dt != null)
		return SerialiseDataTable(dt);

	DataRow dr = o as DataRow;
	if (dr != null)
		return SerialiseDataRow(dr, removeArray);

	string s = o as string;
	if (s != null && s == JSON.Null)
		return null;

	if (o != null)
		return o;

	return null;
}

public object SerialiseDataTable(DataTable dt)
{
	if (IsSingleRow(dt))
		return SerialiseGeneric(dt.Rows[0], false);
	else
	{
		JArray ja = new JArray();
		foreach (DataRow r in dt.Rows)
			ja.Add(SerialiseGeneric(r, true));
		return ja;
	}
}

public bool IsSingleRow(DataTable dt)
{
	if (dt.ExtendedProperties.Contains("SingleRow"))
		return System.Convert.ToBoolean(dt.ExtendedProperties["SingleRow"]);
	// Fallback for older versions of blueprism
	return dt.Rows.Count == 1;
}

public object SerialiseDataRow(DataRow dr, bool removeArray)
{
	JObject jo = new JObject();
	foreach (DataColumn c in dr.Table.Columns)
	{
		string s = c.ColumnName;
		if (removeArray && s == JSON.Array)
			return SerialiseGeneric(dr[s], true);
		jo[s] = JToken.FromObject(SerialiseGeneric(dr[s], false));
	}
	return jo;
}

public DataTable ConvertToDataTable(string json)
{
	object o = JsonConvert.DeserializeObject(json);
	return (DataTable)DeserialiseGeneric(o, true);
}

private object DeserialiseGeneric(object o, bool populate)
{
	JArray a = o as JArray;
	if (a != null)
		return mUseNewParseMethod ? DeserialiseArrayWithoutJArray(a, populate) : DeserialiseArray(a, populate);

	JObject jo = o as JObject;
	if (jo != null)
		return DeserialiseObject(jo, populate);

	JValue jv = o as JValue;
	if (jv != null)
		return jv.Value;

	return JSON.Null;
}

private string GetKey(KeyValuePair<string, JToken> kv)
{
	if (kv.Key != null)
		return kv.Key.ToString();
	return "";
}


private DataTable DeserialiseObject(JObject o, bool populate)
{
	DataTable dt = new DataTable();

	foreach (KeyValuePair<string, JToken> kv in o)
	{
		Type type = GetTypeOf(DeserialiseGeneric(kv.Value, false));
		dt.Columns.Add(GetKey(kv), type);
	}

	if (populate)
	{
		DataRow dr = dt.NewRow();
		foreach (KeyValuePair<string, JToken> kv in o)
			dr[GetKey(kv)] = DeserialiseGeneric(kv.Value, true);
		dt.Rows.Add(dr);
	}

	return dt;
}

private DataTable DeserialiseArrayWithoutJArray(JArray jarr, bool populate)
{
	DataTable dt = new DataTable();

	Type first = null;
	foreach (object e in jarr)
	{
		if (first == null)
			first = GetTypeOf(DeserialiseGeneric(e, false));
		if (GetTypeOf(DeserialiseGeneric(e, false)) != first)
			throw new Exception("Data Type mismatch in array");
	}

	System.Collections.Specialized.OrderedDictionary columns = new System.Collections.Specialized.OrderedDictionary();
	var allTypesInColumnsMatch = jarr.All(e =>
	{
		if (!(e is JObject))
			return false;
		foreach (KeyValuePair<string, JToken> pair in (JObject)e)
		{
			object val = pair.Value;
			if (val is JValue)
				val = (JValue)(pair.Value);
			var tp = val ?? (object)"".GetType();

			if (columns.Contains(pair.Key))
			{
				if (tp != columns[pair.Key])
					return false;
			}
			else
				columns[pair.Key] = tp;
		}
		return true;
	});

	if (allTypesInColumnsMatch)
	{
		foreach (DictionaryEntry pair in columns)
		{
			string key = System.Convert.ToString(pair.Key);
			Type tp = (Type)pair.Value;
			if (tp == typeof(JObject) || tp == typeof(JArray))
				dt.Columns.Add(key, typeof(DataTable));
			else
				dt.Columns.Add(key, tp);
		}
	}
	else if (first != null)
		dt.Columns.Add(JSON.Array, first);

	if (populate)
	{
		foreach (object e in jarr)
		{
			DataRow dr = dt.NewRow();
			if (allTypesInColumnsMatch)
			{
				foreach (KeyValuePair<string, JToken> pair in (JObject)e)
					dr[pair.Key] = DeserialiseGeneric(pair.Value, true);
			}
			else
				dr[JSON.Array] = DeserialiseGeneric(e, true);

			dt.Rows.Add(dr);
		}
	}

	return dt;
}

private DataTable DeserialiseArray(JArray o, bool populate)
{
	DataTable dt = new DataTable();

	Type first = null;
	foreach (object e in o)
	{
		if (first == null)
			first = GetTypeOf(DeserialiseGeneric(e, false));
		if (GetTypeOf(DeserialiseGeneric(e, false)) != first)
			throw new Exception("Data Type mismatch in array");
	}
	if (first != null)
		dt.Columns.Add(JSON.Array, first);

	if (populate)
	{
		foreach (object e in o)
		{
			DataRow dr = dt.NewRow();
			dr[JSON.Array] = DeserialiseGeneric(e, true);
			dt.Rows.Add(dr);
		}
	}

	return dt;
}

private Type GetTypeOf(object o)
{
	if (o == null)
		return typeof(string);
	return o.GetType();
}

public bool IsNumeric(string value)
{
    return value.All(char.IsNumber);
}]]></code></stage><stage stageid="c290e7f4-b01b-4012-9422-044432a3cc82" name="Clean Up" type="SubSheetInfo"><subsheetid>6a9ccb5a-8cc3-44ac-b343-39680558062f</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="662f70f7-7036-462d-b9bf-f35265dd971a" name="Start" type="Start"><subsheetid>6a9ccb5a-8cc3-44ac-b343-39680558062f</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>153f4275-2acd-48a5-b6e6-409fcb2441a8</onsuccess></stage><stage stageid="153f4275-2acd-48a5-b6e6-409fcb2441a8" name="End" type="End"><subsheetid>6a9ccb5a-8cc3-44ac-b343-39680558062f</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="885aaf30-a216-44c5-975b-ca58ce02f815" name="JSON to Collection" type="SubSheetInfo"><subsheetid>e5aeb4cb-cd25-4535-b3be-b46681b4e6b6</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="e5625896-d966-4a10-aa39-2e85611f490f" name="Start" type="Start"><subsheetid>e5aeb4cb-cd25-4535-b3be-b46681b4e6b6</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="json" stage="json" /></inputs><onsuccess>779de445-0658-4a45-a1ef-a38d6de24429</onsuccess></stage><stage stageid="66526e3e-8b9e-4452-9ca8-f70baa9aec4a" name="End" type="End"><subsheetid>e5aeb4cb-cd25-4535-b3be-b46681b4e6b6</subsheetid><loginhibit /><display x="15" y="45" /><outputs><output type="collection" name="Result" stage="Result" /></outputs></stage><stage stageid="007e04e2-4ed0-4afd-87d3-c06d79f48d86" name="new" type="Note"><subsheetid>6a9ccb5a-8cc3-44ac-b343-39680558062f</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="d92fd7fc-b028-457a-a14a-17d66c4b5513" name="new" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="779de445-0658-4a45-a1ef-a38d6de24429" name="JSON To Collection" type="Code"><subsheetid>e5aeb4cb-cd25-4535-b3be-b46681b4e6b6</subsheetid><loginhibit /><display x="15" y="-30" /><inputs><input type="text" name="json" expr="[json]" /></inputs><outputs><output type="collection" name="result" stage="Result" /></outputs><onsuccess>66526e3e-8b9e-4452-9ca8-f70baa9aec4a</onsuccess><code><![CDATA[result = ConvertToDataTable(json);]]></code></stage><stage stageid="da3984e5-ce52-4649-81c5-a71d452a5ba0" name="json" type="Data"><subsheetid>e5aeb4cb-cd25-4535-b3be-b46681b4e6b6</subsheetid><display x="-195" y="0" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0e93e91c-85e1-4c75-b74c-52d08c0724e6" name="Collection to JSON" type="SubSheetInfo"><subsheetid>560472b9-cea4-41d5-bc36-c49d6c1b26e6</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="c10fccbd-439b-447d-908a-58f20a540146" name="Start" type="Start"><subsheetid>560472b9-cea4-41d5-bc36-c49d6c1b26e6</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="collection" name="Data" stage="Data" /></inputs><onsuccess>7923115c-5283-4694-b2c1-142afb4d3788</onsuccess></stage><stage stageid="ede1f653-07f1-42eb-8616-8d2d3dfb5244" name="End" type="End"><subsheetid>560472b9-cea4-41d5-bc36-c49d6c1b26e6</subsheetid><loginhibit /><display x="15" y="60" /><outputs><output type="text" name="JSON" stage="JSON" /></outputs></stage><stage stageid="8f488472-d2dd-4bbc-a98e-07d6a494ab3f" name="Result" type="Collection"><subsheetid>e5aeb4cb-cd25-4535-b3be-b46681b4e6b6</subsheetid><display x="-195" y="75" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="7923115c-5283-4694-b2c1-142afb4d3788" name="Collection To JSON" type="Code"><subsheetid>560472b9-cea4-41d5-bc36-c49d6c1b26e6</subsheetid><loginhibit /><display x="15" y="-30" /><inputs><input type="collection" name="data" expr="[Data]" /></inputs><outputs><output type="text" name="json" stage="JSON" /></outputs><onsuccess>ede1f653-07f1-42eb-8616-8d2d3dfb5244</onsuccess><code><![CDATA[json = ConvertToJSON(data);]]></code></stage><stage stageid="dbeac687-55ba-4b1a-9e9b-1a5f1e763886" name="Data" type="Collection"><subsheetid>560472b9-cea4-41d5-bc36-c49d6c1b26e6</subsheetid><loginhibit /><display x="-195" y="-15" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="60425486-0e54-4004-afef-6ccb7e96828d" name="JSON" type="Data"><subsheetid>560472b9-cea4-41d5-bc36-c49d6c1b26e6</subsheetid><display x="-195" y="60" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="68820997-9906-40ef-b5f3-325f6f0a25b9" name="JSON to Collection (skipping JArray)" type="SubSheetInfo"><subsheetid>e53062c7-68de-4763-b37a-456688d0d607</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="14799289-a9b9-4b93-aeb6-f0240547be63" name="Start" type="Start"><subsheetid>e53062c7-68de-4763-b37a-456688d0d607</subsheetid><loginhibit /><display x="-30" y="-120" /><inputs><input type="text" name="json" stage="json" /></inputs><onsuccess>8cb729e4-705c-400b-8d1d-0b54dd51fb94</onsuccess></stage><stage stageid="21187841-67f3-4ed1-a3b0-de763bb1e801" name="End" type="End"><subsheetid>e53062c7-68de-4763-b37a-456688d0d607</subsheetid><loginhibit /><display x="-30" y="30" /><outputs><output type="collection" name="Result" stage="Result" /></outputs></stage><stage stageid="8cb729e4-705c-400b-8d1d-0b54dd51fb94" name="JSON To Collection Without JArray" type="Code"><subsheetid>e53062c7-68de-4763-b37a-456688d0d607</subsheetid><loginhibit /><display x="-30" y="-45" /><inputs><input type="text" name="json" expr="[json]" /></inputs><outputs><output type="collection" name="result" stage="Result" /></outputs><onsuccess>21187841-67f3-4ed1-a3b0-de763bb1e801</onsuccess><code><![CDATA[result = BluePrismConverter.JsonToCollection(json);
]]></code></stage><stage stageid="b3a37b86-f505-4522-80d4-2c9e45ab723c" name="json" type="Data"><subsheetid>e53062c7-68de-4763-b37a-456688d0d607</subsheetid><display x="-195" y="0" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="98ca8a8f-1ce6-4cb7-85e6-9fff8b1b06f9" name="Result" type="Collection"><subsheetid>e53062c7-68de-4763-b37a-456688d0d607</subsheetid><display x="-195" y="75" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="f95350a7-9c25-487f-ad74-c7ce70ea37a5" name="Note2" type="Note"><narrative>© 2023 Blue Prism Limited
Licensed under the Blue Prism Asset License and Support Terms
https://digitalexchange.blueprism.com/fileMedia/download/a9111324-3192-43ff-9166-566620ca1182</narrative><display x="240" y="-15" w="300" h="90" /><font family="Segoe UI" size="12" style="Regular" color="0000FF" /></stage><stage stageid="dfa7d330-e791-49c6-b4fb-6011b4d8d6cc" name="Note1" type="Note"><loginhibit /><narrative>Version 10.0.1</narrative><display x="15" y="-165" w="150" h="30" /><font family="Segoe UI" size="14" style="Bold" color="FF0000" /></stage><stage stageid="c07d13ef-4200-4377-8cfd-bd38c06ea923" name="JsonPath" type="SubSheetInfo"><subsheetid>1c04dc1d-81e9-47e9-a8c4-b46dd19b2624</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="ee1a9752-11e4-4a3f-aae8-3e910b966e9c" name="Start" type="Start"><subsheetid>1c04dc1d-81e9-47e9-a8c4-b46dd19b2624</subsheetid><loginhibit /><display x="-30" y="-60" /><inputs><input type="text" name="Json" stage="Json" /><input type="text" name="JsonPath" stage="JsonPath" /></inputs><onsuccess>d0ff9ba9-4bf0-4ba4-a9d6-85a5a0935c7e</onsuccess></stage><stage stageid="4b590fe3-4e65-4b28-baa0-8852d218894a" name="End" type="End"><subsheetid>1c04dc1d-81e9-47e9-a8c4-b46dd19b2624</subsheetid><loginhibit /><display x="-30" y="60" /><outputs><output type="number" name="NumericResult" stage="NumericResult" /><output type="text" name="TextResult" stage="TextResult" /><output type="text" name="ErrorMessage" stage="ErrorMessage" /></outputs></stage><stage stageid="7ae65c44-8e32-406c-ad5b-fa0f802cdabd" name="Json" type="Data"><subsheetid>1c04dc1d-81e9-47e9-a8c4-b46dd19b2624</subsheetid><display x="-195" y="0" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b6118f7f-6c60-4e0b-9683-f749ae300a06" name="JsonPath" type="Data"><subsheetid>1c04dc1d-81e9-47e9-a8c4-b46dd19b2624</subsheetid><display x="-195" y="45" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d0ff9ba9-4bf0-4ba4-a9d6-85a5a0935c7e" name="Process Json - Single Output" type="Code"><subsheetid>1c04dc1d-81e9-47e9-a8c4-b46dd19b2624</subsheetid><loginhibit /><display x="-30" y="0" w="120" h="30" /><inputs><input type="text" name="Json" expr="[Json]" /><input type="text" name="JsonPath" expr="[JsonPath]" /></inputs><outputs><output type="text" name="TextResult" stage="TextResult" /><output type="number" name="NumericResult" stage="NumericResult" /><output type="text" name="ErrorMessage" stage="ErrorMessage" /></outputs><onsuccess>4b590fe3-4e65-4b28-baa0-8852d218894a</onsuccess><code><![CDATA[// Initialize the output vars as only one will be used.
NumericResult = 0;
TextResult = String.Empty;
ErrorMessage = String.Empty;

String tempResult = string.Empty;

JObject jo;

jo = JObject.Parse(Json);

try
{
	tempResult = (string)jo.SelectToken(JsonPath,true);

	if (IsNumeric(tempResult))
	{
		NumericResult = Decimal.Parse(tempResult);
	}
	else
	{
		TextResult = tempResult;
	}
}
catch (JsonException)
{
	ErrorMessage = "Unable to find value in supplied JSON.";
}






]]></code></stage><stage stageid="8a2694eb-d12b-4cad-87cb-d43651aeb0f2" name="NumericResult" type="Data"><subsheetid>1c04dc1d-81e9-47e9-a8c4-b46dd19b2624</subsheetid><display x="-165" y="165" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6bb1f845-c916-472b-852a-ab9c873bf569" name="TextResult" type="Data"><subsheetid>1c04dc1d-81e9-47e9-a8c4-b46dd19b2624</subsheetid><display x="-225" y="165" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b1351cf4-399a-4e58-b568-321f0d3196e5" name="ErrorMessage" type="Data"><subsheetid>1c04dc1d-81e9-47e9-a8c4-b46dd19b2624</subsheetid><loginhibit /><display x="-195" y="210" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="94ab4d76-1378-44d7-bfd9-c4a6eaa1e710" name="JsonPath - Return Collection" type="SubSheetInfo"><subsheetid>cbbe7eb7-53d6-49a6-9f88-cb3a26c334df</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="f48025fa-9b5d-4675-8147-3478db7860c6" name="Start" type="Start"><subsheetid>cbbe7eb7-53d6-49a6-9f88-cb3a26c334df</subsheetid><loginhibit /><display x="-15" y="-45" /><inputs><input type="text" name="Json" stage="Json" /><input type="text" name="JsonPath" stage="JsonPath" /></inputs><onsuccess>a0419bd6-afbf-4de4-98ec-5471c207786c</onsuccess></stage><stage stageid="09dc30b8-a6f6-4594-9044-3e15b51f75ef" name="End" type="End"><subsheetid>cbbe7eb7-53d6-49a6-9f88-cb3a26c334df</subsheetid><loginhibit /><display x="-15" y="135" /><outputs><output type="collection" name="Result" stage="Result" /><output type="text" name="ErrorMessage" stage="ErrorMessage" /></outputs></stage><stage stageid="be0e5e0e-6e93-4633-8c64-c02b0875b278" name="Json" type="Data"><subsheetid>cbbe7eb7-53d6-49a6-9f88-cb3a26c334df</subsheetid><display x="-195" y="0" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ba7a4062-02e0-4458-8755-f7a521119277" name="JsonPath" type="Data"><subsheetid>cbbe7eb7-53d6-49a6-9f88-cb3a26c334df</subsheetid><display x="-195" y="45" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a0419bd6-afbf-4de4-98ec-5471c207786c" name="JsonPath - Return Object" type="Code"><subsheetid>cbbe7eb7-53d6-49a6-9f88-cb3a26c334df</subsheetid><loginhibit /><narrative>This allows multiple objects to be returned as a Json string.</narrative><display x="-15" y="15" /><inputs><input type="text" name="Json" expr="[Json]" /><input type="text" name="JsonPath" expr="[JsonPath]" /></inputs><outputs><output type="text" name="TextResult" stage="TextResult" /><output type="number" name="NumericResult" stage="NumericResult" /><output type="text" name="ErrorMessage" stage="ErrorMessage" /></outputs><onsuccess>03bbb947-bcd3-4602-802b-f0444d868a92</onsuccess><code><![CDATA[//Initialize the output vars as only one will be used.
NumericResult = 0;
TextResult = String.Empty;
ErrorMessage=String.Empty;

string tempResult = string.Empty;
JToken token;

JObject jo;

jo = JObject.Parse(Json);

try
{
	token = jo.SelectToken(JsonPath, true);
	tempResult = token.ToString();

	TextResult = tempResult;
}
catch (JsonException)
{
	ErrorMessage = "Unable to find value in supplied JSON.";
}





]]></code></stage><stage stageid="b58dff70-5256-4b01-8e97-ed2efcbcbfcd" name="NumericResult" type="Data"><subsheetid>cbbe7eb7-53d6-49a6-9f88-cb3a26c334df</subsheetid><display x="-225" y="120" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b226d9b3-eff1-427f-8b2e-eb5da2cefb05" name="TextResult" type="Data"><subsheetid>cbbe7eb7-53d6-49a6-9f88-cb3a26c334df</subsheetid><display x="-165" y="120" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="60b9ffe8-dee6-4b41-b324-21aeca4ac438" name="ErrorMessage" type="Data"><subsheetid>cbbe7eb7-53d6-49a6-9f88-cb3a26c334df</subsheetid><loginhibit /><display x="-195" y="210" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="03bbb947-bcd3-4602-802b-f0444d868a92" name="JSON to Collection" type="SubSheet"><subsheetid>cbbe7eb7-53d6-49a6-9f88-cb3a26c334df</subsheetid><loginhibit /><display x="-15" y="75" /><inputs><input type="text" name="json" friendlyname="json" expr="[TextResult]" /></inputs><outputs><output type="collection" name="Result" friendlyname="Result" stage="Result" /></outputs><onsuccess>09dc30b8-a6f6-4594-9044-3e15b51f75ef</onsuccess><processid>e5aeb4cb-cd25-4535-b3be-b46681b4e6b6</processid></stage><stage stageid="66ec6cbe-f703-4076-bcf5-5b0e22e41ba3" name="Result" type="Collection"><subsheetid>cbbe7eb7-53d6-49a6-9f88-cb3a26c334df</subsheetid><display x="-195" y="255" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="87cac279-7118-48cc-b1d7-3658fc032d77" name="Inputs" type="Block"><subsheetid>560472b9-cea4-41d5-bc36-c49d6c1b26e6</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFCC00" /></stage><stage stageid="01799449-c645-49c1-8c4f-8986f1b1d742" name="Outputs" type="Block"><subsheetid>560472b9-cea4-41d5-bc36-c49d6c1b26e6</subsheetid><loginhibit /><display x="-270" y="30" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="00FF00" /></stage><stage stageid="a6c9d22a-d9ca-4915-bc8e-d670af070403" name="Inputs" type="Block"><subsheetid>e5aeb4cb-cd25-4535-b3be-b46681b4e6b6</subsheetid><loginhibit /><display x="-270" y="-30" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFCC00" /></stage><stage stageid="382cc03e-2ac0-4ec6-adb9-c3cc75a7ca5e" name="Outputs" type="Block"><subsheetid>e5aeb4cb-cd25-4535-b3be-b46681b4e6b6</subsheetid><loginhibit /><display x="-270" y="45" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="00FF00" /></stage><stage stageid="7f989a6d-ca7f-4b8e-a295-13d0e8290cf2" name="Inputs" type="Block"><subsheetid>e53062c7-68de-4763-b37a-456688d0d607</subsheetid><loginhibit /><display x="-270" y="-30" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFCC00" /></stage><stage stageid="f366aecb-e6eb-48a8-abe6-7c5815ca65f3" name="Outputs" type="Block"><subsheetid>e53062c7-68de-4763-b37a-456688d0d607</subsheetid><loginhibit /><display x="-270" y="45" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="00FF00" /></stage><stage stageid="8af65c59-f2d4-4d02-a30a-63b08b35cc7f" name="Inputs" type="Block"><subsheetid>1c04dc1d-81e9-47e9-a8c4-b46dd19b2624</subsheetid><loginhibit /><display x="-270" y="-30" w="150" h="105" /><font family="Segoe UI" size="10" style="Regular" color="FFCC00" /></stage><stage stageid="5d7a75fc-0689-4c1b-b7a8-bcb95fc46ffb" name="Outputs" type="Block"><subsheetid>1c04dc1d-81e9-47e9-a8c4-b46dd19b2624</subsheetid><loginhibit /><display x="-270" y="120" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="00FF00" /></stage><stage stageid="52bedb01-d26a-4421-b30a-af904dfd5f10" name="Inputs" type="Block"><subsheetid>cbbe7eb7-53d6-49a6-9f88-cb3a26c334df</subsheetid><loginhibit /><display x="-270" y="-30" w="150" h="105" /><font family="Segoe UI" size="10" style="Regular" color="FFCC00" /></stage><stage stageid="5e1ed7e6-95cc-4409-9c77-3b4c79d24ac6" name="Outputs" type="Block"><subsheetid>cbbe7eb7-53d6-49a6-9f88-cb3a26c334df</subsheetid><loginhibit /><display x="-270" y="165" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="00FF00" /></stage><stage stageid="921b8f62-3650-4490-a8f4-c38efa72e580" name="Intermediary Values" type="Block"><subsheetid>cbbe7eb7-53d6-49a6-9f88-cb3a26c334df</subsheetid><loginhibit /><display x="-270" y="90" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="00FFFF" /></stage></process></object>
        <work-queue id="14" name="Eduard_Haponov - Weather API" key-field="City" xmlns="http://www.blueprism.co.uk/product/work-queue" />
        <webapiservice id="243722a6-e1d5-4fdb-8c8f-9326b57b4e83" name="Eduard_Haponov - OpenWeather Web API Service" enabled="true" xmlns="http://www.blueprism.co.uk/product/webapiservice">
            <configuration baseurl="https://api.openweathermap.org" xmlns="">
                <actions>
                    <action id="1" name="Get Weather for City" enabled="true" enableRequestOutputParameter="false" disableSendingOfRequest="false">
                        <description><![CDATA[]]></description>
                        <request httpmethod="GET" urlpath="/data/2.5/weather?q=[City]&amp;appid=[API_KEY]&amp;units=[Units]">
                            <headers></headers>
                            <bodycontent type="0" />
                        </request>
                        <parameters>
                            <actionparameter name="City" expose="true" datatype="64">
                                <initialvalue><![CDATA[]]></initialvalue>
                                <description><![CDATA[]]></description>
                            </actionparameter>
                            <actionparameter name="API_KEY" expose="false" datatype="64">
                                <initialvalue><![CDATA[9652434e52c62323aeae96cd3c0ae347]]></initialvalue>
                                <description><![CDATA[]]></description>
                            </actionparameter>
                            <actionparameter name="Units" expose="true" datatype="64">
                                <initialvalue><![CDATA[metric]]></initialvalue>
                                <description><![CDATA[]]></description>
                            </actionparameter>
                        </parameters>
                        <outputparameters>
                            <parameters></parameters>
                            <code><![CDATA[]]></code>
                        </outputparameters>
                    </action>
                </actions>
                <commonparameters></commonparameters>
                <commonheaders></commonheaders>
                <commonauthentications>
                    <authentication type="0" />
                </commonauthentications>
                <commoncode>
                    <codeproperties code="" language="visualbasic">
                        <namespaces>
                            <namespace>System</namespace>
                            <namespace>System.Drawing</namespace>
                            <namespace>System.Data</namespace>
                        </namespaces>
                        <references>
                            <reference>System.dll</reference>
                            <reference>System.Data.dll</reference>
                            <reference>System.Xml.dll</reference>
                            <reference>System.Drawing.dll</reference>
                        </references>
                    </codeproperties>
                </commoncode>
                <configurationsettings>
                    <configurationsettings requesttimeout="10" authserverrequesttimeout="10" />
                </configurationsettings>
            </configuration>
        </webapiservice>
        <environment-variable id="Eduard_Haponov - Weather API - Archive Folder Path" name="Eduard_Haponov - Weather API - Archive Folder Path" type="text" value="E:\Documents\BluePrism\Weather API\Input\Archive\" xmlns="http://www.blueprism.co.uk/product/environment-variable">
            <description>Weather API</description>
        </environment-variable>
        <environment-variable id="Eduard_Haponov - Weather API - File Errors Path" name="Eduard_Haponov - Weather API - File Errors Path" type="text" value="E:\Documents\BluePrism\Weather API\ErrorMessage.txt" xmlns="http://www.blueprism.co.uk/product/environment-variable">
            <description>Weather API</description>
        </environment-variable>
        <environment-variable id="Eduard_Haponov - Weather API - Input File Folder Path" name="Eduard_Haponov - Weather API - Input File Folder Path" type="text" value="E:\Documents\BluePrism\Weather API\Input\" xmlns="http://www.blueprism.co.uk/product/environment-variable">
            <description>Weather API</description>
        </environment-variable>
        <environment-variable id="Eduard_Haponov - Weather API - Output Folder Path" name="Eduard_Haponov - Weather API - Output Folder Path" type="text" value="E:\Documents\BluePrism\Weather API\Output\" xmlns="http://www.blueprism.co.uk/product/environment-variable">
            <description>Weather API</description>
        </environment-variable>
        <process-group id="05c51ad8-dc95-498d-9026-6f470424653a" name="Default/Eduard_Haponov - Weather API" isDefaultGroup="False" xmlns="http://www.blueprism.co.uk/product/process-group">
            <members>
                <process id="de828f2a-a065-4c5d-a613-4b995d2ad705" />
            </members>
        </process-group>
        <object-group id="8b5b5132-cd4f-4d84-9728-90615ce811de" name="Default" isDefaultGroup="True" xmlns="http://www.blueprism.co.uk/product/object-group">
            <members>
                <object id="d39ef435-da5c-4e38-a846-b903b2cf3d8e" />
            </members>
        </object-group>
    </bpr:contents>
</bpr:release>